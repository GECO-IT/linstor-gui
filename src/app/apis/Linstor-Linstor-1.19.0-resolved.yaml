---
openapi: 3.0.2
info:
  title: Linstor REST API
  description: |
    Linstor REST API V1

    The V1 rest api of Linstor should stay compatible and only additions are made to the API,
    If there are breaking changes or redesigned a new major REST API version will be issued.

    Server runs per default on port `3370` on `::` ipv6 and ipv4.

    To change the bind address or port you can use the following linstor client commands:
    ```
    linstor controller set-property REST/bindAddress 127.0.0.1
    linstor controller set-property REST/port 8080
    ```

    After setting this properties restart the controller and the new values should be used.

    Changelog:

    * 1.19.0
      - Added POST /v1/queries/resource-groups/query-all-size-info
      - Added QueryAllSizeInfoRequest and QueryAllSizeInfoResponse objects
    * 1.18.0
      - Added POST /v1/action/snapshot/multi as well as CreateMultiSnapshotRequest and CreateMultiSnapshotResponse objects
    * 1.17.0
      - Added POST /v1/resource-groups/{resource_group}/query-size-info
      - Added QuerySizeInfoRequest and QuerySizeInfoResponse objects
    * 1.16.0
      - Added GET /v1/node-connections/  with filter-options ?node_a and ?node_b
      - Added PUT /v1/node-connections/{nodeA}/{nodeB}
      - Added NodeConnection and NodeConnectionModify objects
    * 1.15.0
      - Added GET, POST /v1/remotes/ebs
      - Added PUT /v1/remotes/ebs/{remoteName}
      - Extended RemoteList with ebs_remotes
      - Added POST /v1/nodes/ebs
      - Extended SatelliteConfig with ebs boolean
      - Added SnapshotVolumeNode which includes an optional state
    * 1.14.0
      - Added /v1/physical-storage/{node} to view devices for a single node
      - Added /v1/schedules/ and /v1/schedules/{scheduleName} endpoints as well as Schedule to create, delete, modify and list schedules
      - Added /v1/remotes/{remote_name}/backups/schedule/{schedule_name}/enable, disable and delete to create, delete and modify schedule-remote-rscDfn-triples
      - Added /v1/schedules/list and /v1/schedules/list/{rscName} endpoints as well as ScheduledRscs and ScheduleDetails to list schedule-remote-rscDfn-triples
    * 1.13.1
      - Added k8s options to DB config
      - Added NetCom properties to whitelist
    * 1.13.0
      - Added use_zfs_clone to clone request
      - Added snap_name to backup create
      - Added /v1/events/nodes SSE node events stream
      - Added ?cached=true option for all storage-pool list APIs
      - Added ?limit and ?offset to /v1/nodes/{node}/storage-pools/{storagepool}
      - Added /v1/controller/backup/db to do an database online backup
      - Added /v1/resource-definitions/{resource}/sync-status to check if resource is ready to be used
    * 1.12.0
       - Added /v1/nodes/{node}/evacuate
    * 1.11.0
       - Added /v1/stats/* endpoints for all objects
    * 1.10.2
       - Added /v1/remotes/{remote-name}/backups/info as well as BackupInfo, BackupInfoRequest, BackupInfoStorPool and BackupInfoVolume
       - Added download_only to BackupShip and BackupRestore
    * 1.10.1
       - Added query-param "nodes" for DELETE /v1/resource-definitions/{resource}/snapshots/{snapshot}
       - Added optional Node.eviction_timestamp
       - Added Schema NodeRestore
       - Extended PUT /v1/nodes/{node_name}/restore to accept new NodeRestore body
    * 1.10.0
       - Added resource-definition clone API
         - POST /v1/resource-definitions/{rscname}/clone
         - GET /v1/resource-definitions/{rscname}/clone/{clonedrsc}
       - Added /v1/resource-groups/{resource_group}/adjust
       - Added /v1/resource-groups/adjustall
       - Added Backup and BackupList, as well as the entrypoint /v1/remotes/{remote_name}/backups
       - Added S3Remote and the corresponding entrypoint /v1/remotes
       - Added LinstorRemote and the corresponding entrypoint /v1/remotes
    * 1.9.0
       - Extended SatelliteConfig with remote_spdk boolean
    * 1.8.1
       - Added layer_stack to toggle-disk API
    * 1.8.0
       - Added layer BCACHE
         - Schemas BCacheResource and BCacheVolume
    * 1.7.0
       - Added shared_name to ResourceWithVolumes
       - Added makeResourceAvailable API
       - Added diskless storage pool filter to AutoSelectFilter
       - Added external_locking to StoragePool
       - Added shared_space and external_locking to PhysicalStorageStoragePoolCreate
       - Added shared_space to StoragePool (for listing)
       - Added EXOS API
         - /v1/vendor/seagate/exos/defaults
         - /v1/vendor/seagate/exos/enclosure/
         - /v1/vendor/seagate/exos/enclosure/{enclosure}
         - /v1/vendor/seagate/exos/enclosure/{enclosure}/events
         - /v1/vendor/seagate/exos/map
       - Added ExternalFiles API with corresponding data structure
          - /v1/files
          - /v1/files/{extFileName}
          - /v1/resource-definitions/{resource}/files/{extFileName}
       - Added de-/activate to resource API
         - /v1/resource-definitions/{resource}/resources/{node_name}/activate
         - /v1/resource-definitions/{resource}/resources/{node_name}/deactivate
    * 1.6.0
       - Added the PropsInfo API which exposes meta information about properties:
          - /v1/controller/properties/info
          - /v1/controller/properties/info/all
          - /v1/nodes/properties/info
          - /v1/storage-pool-definitions/properties/info
          - /v1/nodes/{node}/storage-pools/properties/info
          - /v1/resource-definitions/properties/info
          - /v1/resource-definitions/{resource}/resources/properties/info
          - /v1/resource-definitions/{resource}/volume-definitions/properties/info
          - /v1/resource-definitions/{resource}/resources/{node}/volumes/properties/info
          - /v1/resource-definitions/{resource}/resource-connections/properties/info
          - /v1/resource-groups/properties/info
          - /v1/resource-groups/{resource_group}/volume-groups/properties/info
          - /v1/resource-definitions/{resource}/drbd-proxy/properties/info
       - Added /v1/nodes/{node}/restore
       - Added additional_place_count to AutoSelectFilter
    * 1.5.0
       - Added etcd.prefix to ControllerConfigDbEtcd parameters
    * 1.4.0
       - Added promotion_score and may_promote to DrbdResource object
       - Added /v1/error-reports DELETE method, to delete a range of error reports or single ones
       - Added SSE (Server Sent Events) url /v1/events/drbd/promotion
    * 1.3.0
       - Added /v1/view/snapshot-shippings
    * 1.2.0
       - Added optional AutoSelectFilter to resource-group/spawn
       - Added /v1/nodes/{node}/config, that allows you to get and set the satellite config
       - Added /v1/sos-report to create bug reports you can send to linbit
       - Added new fields to the ErrorReport object
       - Added /v1/resource-definitions/{resource}/snapshot-shipping
       - Allow to modify the resource group in Resource definitions
       - Added createTimestamp to Resource and Snapshot
       - Added default value (null) for AutoPlaceRequest's layer_list
    * 1.1.0
       - Added /v1/view/snapshots for a faster all in one snapshot list
       - Filter lists by properties:
          - /v1/nodes
          - /v1/resource-definitions
          - /v1/resource-groups
          - /v1/view/storage-pools
          - /v1/view/resources
    * 1.0.16
       - Added CacheResource and CacheVolume schemas
       - AutSelectFilter arrays are now null per default
    * 1.0.15
      - Added connections map to the DRBD resource layer data
      - Added support for Openflex
    * 1.0.14
      - Added /v1/controller/config, that gives you the controller config information
    * 1.0.13
      - Fixed broken volume definition modify `flags` handling
      - Added flags to volume groups (create/modify)
    * 1.0.12
      - Added WritecacheResource and WritecacheVolume schemas.
      - Removed support for swordfish
      - Added `with_storage_pool` to PhysicalStorageCreate post request, allowing to create linstor storage pools too
      - Added `gross` flag for volume-definition size
      - Added flags to VolumeDefinitionModify (so that `gross` flag can be changed)
      - Added query-max-volume-size to resource-groups
    * 1.0.11
      - Added /v1/physical-storage endpoint, that lets you query and create lvm/zfs pools
      - Extended Node with list of supported providers and layers as well as lists of reasons for
        unsupported providers and layers
    * 1.0.10
      - Added `reports` array field to Volume object, contains ApiCallRcs for problems
      - Changed `ResourceDefinitions` can now include `VolumeDefinitions` in `volume_definitions` field
      - Added various filter query parameters
    * 1.0.9
      - Added supports_snapshots to StoragePool
    * 1.0.8
      - Added /v1/resource-groups
      - Added /v1/resource-groups/{rscgrp}/volume-groups
      - Moved AutoSelectFilter::place_count default indirectly to create resource implementation
      - Added diskless_on_remaining to AutoSelectFilter
      - Changed /v1/view/resources return type to ResourceWithVolumes
        ResourceWithVolumes is now a child type of Resource (removed volumes from Resource)
    * 1.0.7
      - Added ext_meta_stor_pool to DrbdVolume
      - Added is_active field to the NetInterface type
    * 1.0.6
      - Added /v1/resource-definitions/{rscName}/resources/{nodeName}/volumes/{vlmnr} PUT
    * 1.0.5
      - Added `reports` field to StoragePool object
    * 1.0.4
      - Added /v1/view/storage-pools overview path
      - Added uuid fields for objects
    * 1.0.3
      - Added /v1/view/resources overview path
      - documentation schema extraction
    * 1.0.2
      - Added /v1/storage-pool-definitions object path
      - added NVME layer object type
    * 1.0.1
      - Documentation review and updates
      - no functional changes
    * 1.0.0
      - Initial REST API v1
  contact:
    email: rene.peinthor@linbit.com
  license:
    name: GPLv3
    url: https://www.gnu.org/licenses/gpl-3.0.html
  version: 1.19.0
servers:
- url: http://localhost:3370
  description: Local Linstor controller
tags:
- name: developers
  description: Operations available to regular developers
paths:
  /v1/action/snapshot/multi:
    post:
      tags:
      - developers
      summary: creates one snapshot for multiple resources each
      description: |
        Suspends IO for all given resources before taking the snapshots on
        all participating nodes before resuming IO again.
      operationId: createMultiSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMultiSnapshotRequest'
            example:
              name: snap1
      responses:
        "201":
          description: Snapshot created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMultiSnapshotResponse'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/storage-pool-definitions:
    get:
      tags:
      - developers
      summary: Lists storage pool definitions
      description: Returns an array of all storage pool definitions
      operationId: storagePoolDfnList
      parameters:
      - name: offset
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: Array of all storage pool definitions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoragePoolDefinition'
    post:
      tags:
      - developers
      summary: add a storage pool definition to Linstor
      description: |
        Adds a storage pool definition to Linstor
      operationId: storagePoolDfnAdd
      requestBody:
        description: Storage pool definition to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoragePoolDefinition'
            example:
              storage_pool_name: ssd_pool
      responses:
        "201":
          description: storage pool definition created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/storage-pool-definitions/{storagepool}:
    get:
      tags:
      - developers
      summary: Lists a specific storage pool definition
      description: Returns a specific storage pool definition
      operationId: storagePoolDfnGet
      parameters:
      - name: storagepool
        in: path
        description: Storage pool to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Specified storage pool definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoragePoolDefinition'
    put:
      tags:
      - developers
      summary: modify a storage pool definition
      description: |
        Sets or modifies properties

        Possible properties are:
        - `MaxOversubscriptionRatio` - range[`1-1000`]
      operationId: storPoolDfnModify
      parameters:
      - name: storagepool
        in: path
        description: Storage pool to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoragePoolDefinitionModify'
            example:
              override_props:
                Aux/testprop: "1"
              delete_props:
              - Aux/deleteprop
      responses:
        "200":
          description: storage pool definition modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
    delete:
      tags:
      - developers
      summary: delete a storage pool definition
      description: Delete a storage pool definition from Linstor
      operationId: storagePoolDefinitionDelete
      parameters:
      - name: storagepool
        in: path
        description: Storage pool to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: storage pool definition deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/storage-pool-definitions/properties/info:
    get:
      tags:
      - developers
      summary: List all storage-pool-definition properties
      description: |
        List all properties, including their names and descriptions, that can
        be set for any given storage pool definition.
      responses:
        "200":
          description: |
            A map where the key is the property name and the value is a
            PropsInfo object describing the property.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/PropsInfo'
              example:
                MaxOversubscriptionRatio:
                  info: Maximum allowed ratio of the sum of volume sizes in a thin pool to the total capacity of the pool (default 20)
                  prop_type: range
                  value: (1 - 1000)
                sys/fs/blkio_throttle_read_iops:
                  info: Sets the /sys/fs/cgroup/blkio/blkio.throttle.read_iops_device
                  prop_type: long
  /v1/nodes:
    get:
      tags:
      - developers
      summary: Lists nodes registered to the controller
      description: |
        Returns an array of all nodes registered to Linstor.
      operationId: nodeList
      parameters:
      - name: nodes
        in: query
        description: "Filter only for the specified nodes, if not specified, no filtering."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: props
        in: query
        description: "filter by given properties, full property path"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: Array of all node objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
    post:
      tags:
      - developers
      summary: add a node to Linstor
      description: |
        Adds a node to Linstor

        If only one net-interface is specified and it is does not specify
        a `satellite_port` it will apply the default port and `satellite_encryption_type`
        for this net-interface.
      operationId: nodeAdd
      requestBody:
        description: Node to add to Linstor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
            example:
              name: nodeA
              type: SATELLITE
              net_interfaces:
              - name: default
                address: 10.0.0.2
                satellite_port: 3366
                satellite_encryption_type: Plain
                is_active: true
      responses:
        "201":
          description: node created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/stats/nodes:
    get:
      tags:
      - developers
      summary: Return stats of all nodes.
      description: |
        Returns a node stats object.
      operationId: nodeStats
      responses:
        "200":
          description: Object stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeStats'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/nodes/{node}:
    put:
      tags:
      - developers
      summary: modify a node
      description: |
        Sets or modifies properties

        Possible properties are:
        - `PrefNic` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Preferred network interface to use

        - `StorPoolName` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name to use.

        - `StorPoolNameDrbdMeta` - regex[`^|.internal|[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name to use for external metadata.

        - `sys/fs/blkio_throttle_read` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.read_bps_device

        - `sys/fs/blkio_throttle_write` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.write_bps_device

        - `sys/fs/blkio_throttle_read_iops` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.read_iops_device

        - `sys/fs/blkio_throttle_write_iops` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.write_iops_device

        - `DrbdOptions/AutoEvictAfterTime` - long

            Time a node can be offline before it is declared EVICTED in minutes

        - `DrbdOptions/AutoEvictAllowEviction` - boolean_true_false

            If set to true on a node, it cannot be evicted anymore

        - `Writecache/PoolName` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name for writecache

        - `Writecache/Size` - regex[`^100%|[0-9]{1,2}([.][0-9]*)?%|[1-9][0-9]{2,}$`]

            Size of the writecache in % (0-100) or KiB otherwise

        - `Writecache/Options/StartSector` - long

            offset from the start of cache device in 512-byte sectors

        - `Writecache/Options/HighWatermark` - long

            start writeback when the number of used blocks reach this watermark

        - `Writecache/Options/LowWatermark` - long

            stop writeback when the number of used blocks drops below this watermark

        - `Writecache/Options/WritebackJobs` - long

            limit the number of blocks that are in flight during writeback. Setting this value reduces writeback throughput, but it may improve latency of read requests

        - `Writecache/Options/AutocommitBlocks` - long

            when the application writes this amount of blocks without issuing the FLUSH request, the blocks are automatically commited

        - `Writecache/Options/AutocommitTime` - long

            autocommit time in milliseconds. The data is automatically commited if this time passes and no FLUSH request is received

        - `Writecache/Options/Fua` - enum

            "On" results in "fua" as argument, whereas the value "Off" results in "nofua" argument

            * On
            * Off

        - `Writecache/Options/Additional` - string

            Additional arguments passed through

        - `Cache/OpMode` - enum

            Operation mode

            * writeback
            * writethrough
            * passthrough

        - `Cache/MetaPool` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Name of the storage pool used for the cache metadata. If not specified, this will default to the CachePool property

        - `Cache/Metasize` - regex[`^100%|[0-9]{1,2}([.][0-9]*)?%|[1-9][0-9]{2,}$`]

            Size of the cache in % (0-100) or KiB otherwise.

        - `Cache/CachePool` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Name of the storage pool used for the cache cache device

        - `Cache/Cachesize` - regex[`^100%|[0-9]{1,2}([.][0-9]*)?%|[1-9][0-9]{2,}$`]

            Size of the cache in % (0-100) or KiB otherwise.

        - `Cache/Blocksize` - long

            Block size

        - `Cache/Policy` - enum

            Replacemant policy

            * mq
            * smq
            * cleaner

        - `StorDriver/LvcreateOptions` - regex[`.*`]

            Additional parameters added to every 'lvcreate ... ' command

        - `StorDriver/ZfscreateOptions` - regex[`.*`]

            Additional parameters added to every 'zfs create ... ' command

        - `StorDriver/Openflex/ApiHost` - regex[`.+`]

            Openflex API host name

        - `StorDriver/Openflex/ApiPort` - regex[`[0-9]+`]

            Openflex API port

        - `StorDriver/Openflex/UserName` - regex[`.+`]

            Openflex user name

        - `StorDriver/Openflex/UserPassword` - regex[`.+`]

            Openflex password

        - `StorDriver/Openflex/StorDev` - regex[`.+`]

            Openflex storage device

        - `StorDriver/Openflex/StorDevHost` - regex[`.+`]

            Openflex storage device host

        - `StorDriver/Openflex/JobWaitDelay` - regex[`[0-9]+`]

            Delay in milliseconds linstor waits between fetching the job status

        - `StorDriver/Openflex/JobWaitMaxCount` - regex[`[0-9]+`]

            Maximum retries with wait delay until openflex fails

        - `Autoplacer/MaxThroughput` - long

            The maximum throughput the given storage pool is capable of.

        - `DrbdProxy/AutoEnable` - boolean_true_false
        - `Site` - string
        - `DrbdOptions/auto-diskful-allow-cleanup` - boolean_true_false

            Allows this resource to be cleaned up after toggle-disk + resync is finished
      operationId: nodeModify
      parameters:
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeModify'
            example:
              override_props:
                Aux/testprop: "1"
              delete_props:
              - Aux/deleteprop
      responses:
        "200":
          description: node modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
    delete:
      tags:
      - developers
      summary: delete a node
      description: Delete a node from Linstor
      operationId: nodeDelete
      parameters:
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: node deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/nodes/properties/info:
    get:
      tags:
      - developers
      summary: List all node properties
      description: |
        List all properties, including their names and descriptions, that can
        be set for any given node.
      responses:
        "200":
          description: |
            A map where the key is the property name and the value is a
            PropsInfo object describing the property.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/PropsInfo'
              example:
                Cache/Cachesize:
                  info: Size of the cache in % (0-100) or KiB otherwise.
                  prop_type: regex
                  value: "^100%|[0-9]{1,2}([.][0-9]*)?%|[1-9][0-9]{2,}$"
                  dflt: 5%
                StorPoolName:
                  info: Linstor storage pool name to use.
                  prop_type: regex
                  value: "^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$"
  /v1/nodes/{node}/lost:
    delete:
      tags:
      - developers
      summary: delete an unrecoverable node
      description: Delete an unrecoverable node
      operationId: nodeLost
      parameters:
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: node deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/nodes/{node}/reconnect:
    put:
      tags:
      - developers
      summary: reconnect a node to the controller
      description: Reconnect a node to the controller
      operationId: nodeReconnect
      parameters:
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: node put into reconnect cycle
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/nodes/{node}/net-interfaces:
    get:
      tags:
      - developers
      summary: return the list of net-interfaces
      description: Returns the list of netinterfaces for this node
      operationId: netinterfaceList
      parameters:
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: Array of net-interfaces
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetInterface'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
    post:
      tags:
      - developers
      summary: create a netinterface on a node
      description: |
        Create a netinterface on a node

        If satellite_port and satellite_encryption_type are given
        the netinterface can also work as connection to the controller
      operationId: netinterfaceCreate
      parameters:
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetInterface'
      responses:
        "201":
          description: netinterface created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/nodes/{node}/net-interfaces/{netinterface}:
    put:
      tags:
      - developers
      summary: modify a netinterface from a node
      description: Modify a netinterface from a node
      operationId: netinterfaceModified
      parameters:
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: netinterface
        in: path
        description: netinterface name to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetInterface'
      responses:
        "200":
          description: netinterface modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
    delete:
      tags:
      - developers
      summary: delete a netinterface from a node
      description: Delete a netinterface from a node
      operationId: netinterfaceDelete
      parameters:
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: netinterface
        in: path
        description: netinterface name to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: netinterface deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/nodes/{node}/storage-pools:
    get:
      tags:
      - developers
      summary: lists all storage pools for a node
      description: Lists all storage pools of a node
      operationId: nodeStoragePoolList
      parameters:
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: nodes
        in: query
        description: "Filter only for the specified nodes, if not specified, no filtering."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: storage_pools
        in: query
        description: "Filter only for the specified storage pools, if not specified no filtering."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      - name: cached
        in: query
        description: query data from cache if available
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Array list of all storage pools
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoragePool'
    post:
      tags:
      - developers
      summary: creates a new storage pool on this node
      description: |
        Creates a new storage pool on this node.

        `provider_kind` has to be specified and additional to that
        the linked `StorDriver` property that has the value to the backing pool:

          * `LVM`: `StorDriver/LvmVg`
          * `LVM_THIN`: `StorDriver/LvmVg` and `StorDriver/ThinPool`
          * `ZFS`: `StorDriver/ZPool`
          * `ZFS_THIN`: `StorDriver/ZPoolThin`
          * `DISKLESS`: Does not need a property as it has no backing pool
      operationId: nodeStoragePoolCreate
      parameters:
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoragePool'
            example:
              storage_pool_name: DfltStorPool
              provider_kind: LVM_THIN
              props:
                StorDriver/LvmVg: mylvmpool
                StorDriver/ThinPool: thin
      responses:
        "201":
          description: storage pool created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/nodes/{node}/storage-pools/{storagepool}:
    put:
      tags:
      - developers
      summary: modify a storage pool
      description: |
        Sets or modifies properties

        Possible properties are:
        - `StorDriver/StorPoolName` - regex[`[a-zA-Z0-9_/-]+`]
        - `StorDriver/LvmVg` - regex[`[a-zA-Z0-9_-]+`]
        - `StorDriver/ThinPool` - regex[`[a-zA-Z0-9_-]+`]
        - `StorDriver/ZPool` - regex[`[a-zA-Z0-9_/-]+`]
        - `StorDriver/ZPoolThin` - regex[`[a-zA-Z0-9_/-]+`]
        - `StorDriver/FileDir` - regex[`.*`]
        - `PrefNic` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Preferred network interface to use

        - `NVMe/PrefNic` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Preferred network interface to use

        - `StorDriver/LvcreateType` - enum
            * linear
            * striped
            * mirror
            * raid0
            * raid1
            * raid4
            * raid5
            * raid6
            * raid10
            * lzma
            * lz4

        - `StorDriver/LvcreateOptions` - regex[`.*`]

            Additional parameters added to every 'lvcreate ... ' command

        - `StorDriver/ZfscreateOptions` - regex[`.*`]

            Additional parameters added to every 'zfs create ... ' command

        - `StorDriver/WaitTimeoutAfterCreate` - regex[`[0-9]+`]
        - `sys/fs/blkio_throttle_read` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.read_bps_device

        - `sys/fs/blkio_throttle_write` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.write_bps_device

        - `sys/fs/blkio_throttle_read_iops` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.read_iops_device

        - `sys/fs/blkio_throttle_write_iops` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.write_iops_device

        - `StorDriver/Openflex/ApiHost` - regex[`.+`]

            Openflex API host name

        - `StorDriver/Openflex/ApiPort` - regex[`[0-9]+`]

            Openflex API port

        - `StorDriver/Openflex/UserName` - regex[`.+`]

            Openflex user name

        - `StorDriver/Openflex/UserPassword` - regex[`.+`]

            Openflex password

        - `StorDriver/Openflex/StorDev` - regex[`.+`]

            Openflex storage device

        - `StorDriver/Openflex/StorDevHost` - regex[`.+`]

            Openflex storage device host

        - `StorDriver/Openflex/StorPool` - regex[`[0-9]+`]

            Openflex storage pool name

        - `Autoplacer/MaxThroughput` - long

            The maximum throughput the given storage pool is capable of.
      operationId: nodeStoragePoolModify
      parameters:
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: storagepool
        in: path
        description: Storage pool to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      - name: cached
        in: query
        description: query data from cache if available
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoragePoolDefinitionModify'
            example:
              override_props:
                Aux/testprop: "1"
              delete_props:
              - Aux/deleteprop
      responses:
        "200":
          description: storage pool modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
    delete:
      tags:
      - developers
      summary: delete a storage pool
      description: Delete a storage pool
      operationId: nodeStoragePoolDelete
      parameters:
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: storagepool
        in: path
        description: Storage pool to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      - name: cached
        in: query
        description: query data from cache if available
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: storage pool deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/nodes/{node}/storage-pools/properties/info:
    get:
      tags:
      - developers
      summary: List all storage-pool properties
      description: |
        List all properties, including their names and descriptions, that can
        be set for any given storage pool on a particular node.
      parameters:
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: |
            A map where the key is the property name and the value is a
            PropsInfo object describing the property.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/PropsInfo'
              example:
                PrefNic:
                  info: Preferred network interface to use
                  prop_type: regex
                  value: "^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$"
                StorDriver/LvcreateType:
                  prop_type: regex
                  value: (?:linear|lz4|lzma|mirror|raid0|raid1|raid10|raid4|raid5|raid6|striped)
                  dflt: linear
  /v1/nodes/{node}/restore:
    put:
      summary: restore node
      description: restore an evicted node
      parameters:
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeRestore'
      responses:
        "200":
          description: node restored
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/nodes/{node}/config:
    get:
      tags:
      - developers
      summary: show satellite config
      description: |
        Show Satellite config
      operationId: SatelliteConfig
      parameters:
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Satellite config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SatelliteConfig'
        "401":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        "503":
          description: Node offline
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
    put:
      tags:
      - developers
      summary: modify satellite config
      operationId: StltSetConfig
      parameters:
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SatelliteConfig'
      responses:
        "200":
          description: Response on whether the operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "401":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/nodes/{node}/evacuate:
    put:
      tags:
      - developers
      summary: evacuates the node
      description: |
        Evacuates DRBD resources from the given node to other available nodes
        and deletes the evacuated resources once the sync is complete. Additionally
        sets the Node into EVACUATE state (no new resources allowed)
      operationId: nodeEvacuate
      parameters:
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: resources started to evacaute
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/nodes/ebs:
    post:
      tags:
      - developers
      summary: add an EBS (special) node to Linstor
      description: Adds an EBS node to Linstor
      operationId: nodeAddEbs
      requestBody:
        description: Node to add to Linstor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeCreateEbs'
            example:
              name: nodeA
              ebs_remote_name: EbsRemote
      responses:
        "201":
          description: node created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/node-connections:
    get:
      tags:
      - developers
      summary: list all node connections
      description: List all node connections resource
      operationId: nodeConnectionsList
      parameters:
      - name: node_a
        in: query
        description: Filter only for node-connections from or to the given node
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: node_b
        in: query
        description: Filter only for node-connections from or to the given node
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: list of node connections
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NodeConnection'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/node-connections/{node_a}/{node_b}:
    put:
      tags:
      - developers
      summary: modify a node connection
      description: |
        Sets or modifies properties
      operationId: nodeConnectionModify
      parameters:
      - name: node_a
        in: path
        description: source node of the connection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node_b
        in: path
        description: target node of the connection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeConnectionModify'
      responses:
        "200":
          description: node connection modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "404":
          description: object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions:
    get:
      tags:
      - developers
      summary: lists all resource-definitions
      description: |
        Lists all resource definitions.

        A single resource definition can be queried by adding its name
        to the resource string like:

        /v1/resource-definitions/rsc1
      operationId: resourceDefinitionList
      parameters:
      - name: resource_definitions
        in: query
        description: "Filter only for the specified resource definitions, if not specified no filtering."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: props
        in: query
        description: "filter by given properties, full property path"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: Array of all resource-definitions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceDefinition'
    post:
      tags:
      - developers
      summary: add a resource-definition
      description: |
        Adds a resource-definition.

        Only required property is the name of the resource definition.
        All other properties are optional.
      operationId: resourceDefinitionCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceDefinitionCreate'
            example:
              resource_definition:
                name: rsc1
      responses:
        "201":
          description: resource-definition created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/stats/resource-definitions:
    get:
      tags:
      - developers
      summary: Return stats of all resource definitions.
      description: |
        Returns a resource definition stats object.
      operationId: resourceDefinitionStats
      responses:
        "200":
          description: Object stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDefinitionStats'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/resource-definitions/{resource}:
    put:
      tags:
      - developers
      summary: modify a resource-definition
      description: |
        Sets or modifies properties

        Possible properties are:
        - `StorPoolName` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name to use.

        - `StorPoolNameDrbdMeta` - regex[`^|.internal|[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name to use for external metadata.

        - `PeerSlotsNewResource` - range[`1-31`]

            DRBD peer slots to allocate for newly created resources (default 7), the number of peer slots cannot be changed once the resource is created, so allow sufficient slots to increase redundancy in the future

        - `DrbdProxy/CompressionType` - enum
            * zlib
            * lzma
            * lz4
            * zstd

        - `DrbdOptions/AutoEvictMinReplicaCount` - long

            The minimum amount of replicas that should be present for a resource at all times.

        - `FileSystem/Type` - enum

            File system type to use

            * ext4
            * xfs

        - `FileSystem/MkfsParams` - string

            Additional parameters for the mkfs command

        - `NVMe/TRType` - enum

            NVMe transportion type

            * rdma
            * tcp

        - `NVMe/Port` - range[`1-65535`]

            NVMe port

        - `StorDriver/LvcreateType` - enum
            * linear
            * striped
            * mirror
            * raid0
            * raid1
            * raid4
            * raid5
            * raid6
            * raid10
            * lzma
            * lz4

        - `StorDriver/LvcreateOptions` - regex[`.*`]

            Additional parameters added to every 'lvcreate ... ' command

        - `StorDriver/ZfscreateOptions` - regex[`.*`]

            Additional parameters added to every 'zfs create ... ' command

        - `sys/fs/blkio_throttle_read` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.read_bps_device

        - `sys/fs/blkio_throttle_write` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.write_bps_device

        - `sys/fs/blkio_throttle_read_iops` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.read_iops_device

        - `sys/fs/blkio_throttle_write_iops` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.write_iops_device

        - `DrbdOptions/auto-quorum` - enum

            Enables automatic setting of the 'quroum' and 'on-no-quroum' property

            * io-error
            * suspend-io
            * disabled

        - `DrbdOptions/auto-add-quorum-tiebreaker` - boolean_true_false

            Enables automatic management (creation and deletion) of tie breaking resource

        - `DrbdOptions/auto-diskful` - long

            Makes a resource diskful if it was continously diskless primary for X minutes

        - `DrbdOptions/auto-diskful-allow-cleanup` - boolean_true_false

            Allows this resource to be cleaned up after toggle-disk + resync is finished

        - `Writecache/PoolName` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name for writecache

        - `Writecache/Size` - regex[`^100%|[0-9]{1,2}([.][0-9]*)?%|[1-9][0-9]{2,}$`]

            Size of the writecache in % (0-100) or KiB otherwise

        - `Writecache/Options/StartSector` - long

            offset from the start of cache device in 512-byte sectors

        - `Writecache/Options/HighWatermark` - long

            start writeback when the number of used blocks reach this watermark

        - `Writecache/Options/LowWatermark` - long

            stop writeback when the number of used blocks drops below this watermark

        - `Writecache/Options/WritebackJobs` - long

            limit the number of blocks that are in flight during writeback. Setting this value reduces writeback throughput, but it may improve latency of read requests

        - `Writecache/Options/AutocommitBlocks` - long

            when the application writes this amount of blocks without issuing the FLUSH request, the blocks are automatically commited

        - `Writecache/Options/AutocommitTime` - long

            autocommit time in milliseconds. The data is automatically commited if this time passes and no FLUSH request is received

        - `Writecache/Options/Fua` - enum

            "On" results in "fua" as argument, whereas the value "Off" results in "nofua" argument

            * On
            * Off

        - `Writecache/Options/Additional` - string

            Additional arguments passed through

        - `Cache/OpMode` - enum

            Operation mode

            * writeback
            * writethrough
            * passthrough

        - `Cache/MetaPool` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Name of the storage pool used for the cache metadata. If not specified, this will default to the CachePool property

        - `Cache/Metasize` - regex[`^100%|[0-9]{1,2}([.][0-9]*)?%|[1-9][0-9]{2,}$`]

            Size of the cache in % (0-100) or KiB otherwise.

        - `Cache/CachePool` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Name of the storage pool used for the cache cache device

        - `Cache/Cachesize` - regex[`^100%|[0-9]{1,2}([.][0-9]*)?%|[1-9][0-9]{2,}$`]

            Size of the cache in % (0-100) or KiB otherwise.

        - `Cache/Blocksize` - long

            Block size

        - `Cache/Policy` - enum

            Replacemant policy

            * mq
            * smq
            * cleaner

        - `SnapshotShipping/SourceNode` - string

            Node name of the snapshot shipping source

        - `SnapshotShipping/TargetNode` - string

            Node name of the snapshot shipping target

        - `SnapshotShipping/RunEvery` - long

            Runs every X minutes an auto-snapshot-shipping unless the current snapshot-shipping is still running. In this case a new one will be started asap.

        - `SnapshotShipping/Keep` - long

            Keeps the last X shipped snapshots. Removing this property or having a value <= 0 disables auto-cleanup, all auto-snapshots will be kept

        - `AutoSnapshot/RunEvery` - long

            Runs every X minutes an snapshot-creation. Removing this property or having a value <= 0 disables auto-snapshotting.

        - `AutoSnapshot/Keep` - long

            Keeps the last X auto-snapshots. Removing this property or having a value <= 0 disables auto-cleanup, all auto-snapshots will be kept

        - `AutoSnapshot/NextAutoId` - long

            The next ID to try for auto-snapshots

        - `DrbdOptions/Disk/on-io-error` - enum
            * pass_on
            * call-local-io-error
            * detach

        - `DrbdOptions/Disk/disk-barrier` - boolean
        - `DrbdOptions/Disk/disk-flushes` - boolean
        - `DrbdOptions/Disk/disk-drain` - boolean
        - `DrbdOptions/Disk/md-flushes` - boolean
        - `DrbdOptions/Disk/resync-after` - string
        - `DrbdOptions/Disk/al-extents` - range[`67-65534`]
        - `DrbdOptions/Disk/al-updates` - boolean
        - `DrbdOptions/Disk/discard-zeroes-if-aligned` - boolean
        - `DrbdOptions/Disk/disable-write-same` - boolean
        - `DrbdOptions/Disk/disk-timeout` - range[`0-6000`]
        - `DrbdOptions/Disk/read-balancing` - enum
            * prefer-local
            * prefer-remote
            * round-robin
            * least-pending
            * when-congested-remote
            * 32K-striping
            * 64K-striping
            * 128K-striping
            * 256K-striping
            * 512K-striping
            * 1M-striping

        - `DrbdOptions/Disk/rs-discard-granularity` - range[`0-1048576`]
        - `DrbdOptions/PeerDevice/resync-rate` - range[`1-8388608`]
        - `DrbdOptions/PeerDevice/c-plan-ahead` - range[`0-300`]
        - `DrbdOptions/PeerDevice/c-delay-target` - range[`1-100`]
        - `DrbdOptions/PeerDevice/c-fill-target` - range[`0-1048576`]
        - `DrbdOptions/PeerDevice/c-max-rate` - range[`250-4194304`]
        - `DrbdOptions/PeerDevice/c-min-rate` - range[`0-4194304`]
        - `DrbdOptions/PeerDevice/bitmap` - boolean
        - `DrbdOptions/Resource/cpu-mask` - string
        - `DrbdOptions/Resource/on-no-data-accessible` - enum
            * io-error
            * suspend-io

        - `DrbdOptions/Resource/auto-promote` - boolean
        - `DrbdOptions/Resource/peer-ack-window` - range[`2048-204800`]
        - `DrbdOptions/Resource/peer-ack-delay` - range[`1-10000`]
        - `DrbdOptions/Resource/twopc-timeout` - range[`50-600`]
        - `DrbdOptions/Resource/twopc-retry-timeout` - range[`1-50`]
        - `DrbdOptions/Resource/auto-promote-timeout` - range[`0-600`]
        - `DrbdOptions/Resource/max-io-depth` - range[`4-4294967295`]
        - `DrbdOptions/Resource/quorum` - enum [`1-32`]
            * off
            * majority
            * all

        - `DrbdOptions/Resource/on-no-quorum` - enum
            * io-error
            * suspend-io

        - `DrbdOptions/Resource/quorum-minimum-redundancy` - enum [`1-32`]
            * off
            * majority
            * all

        - `DrbdOptions/Net/transport` - string
        - `DrbdOptions/Net/protocol` - enum
            * A
            * B
            * C

        - `DrbdOptions/Net/timeout` - range[`1-600`]
        - `DrbdOptions/Net/max-epoch-size` - range[`1-20000`]
        - `DrbdOptions/Net/connect-int` - range[`1-120`]
        - `DrbdOptions/Net/ping-int` - range[`1-120`]
        - `DrbdOptions/Net/sndbuf-size` - range[`0-10485760`]
        - `DrbdOptions/Net/rcvbuf-size` - range[`0-10485760`]
        - `DrbdOptions/Net/ko-count` - range[`0-200`]
        - `DrbdOptions/Net/allow-two-primaries` - boolean
        - `DrbdOptions/Net/cram-hmac-alg` - string
        - `DrbdOptions/Net/shared-secret` - string
        - `DrbdOptions/Net/after-sb-0pri` - enum
            * disconnect
            * discard-younger-primary
            * discard-older-primary
            * discard-zero-changes
            * discard-least-changes
            * discard-local
            * discard-remote

        - `DrbdOptions/Net/after-sb-1pri` - enum
            * disconnect
            * consensus
            * discard-secondary
            * call-pri-lost-after-sb
            * violently-as0p

        - `DrbdOptions/Net/after-sb-2pri` - enum
            * disconnect
            * call-pri-lost-after-sb
            * violently-as0p

        - `DrbdOptions/Net/always-asbp` - boolean
        - `DrbdOptions/Net/rr-conflict` - enum
            * disconnect
            * call-pri-lost
            * violently
            * retry-connect

        - `DrbdOptions/Net/ping-timeout` - range[`1-300`]
        - `DrbdOptions/Net/data-integrity-alg` - string
        - `DrbdOptions/Net/tcp-cork` - boolean
        - `DrbdOptions/Net/on-congestion` - enum
            * block
            * pull-ahead
            * disconnect

        - `DrbdOptions/Net/congestion-fill` - range[`0-20971520`]
        - `DrbdOptions/Net/congestion-extents` - range[`67-65534`]
        - `DrbdOptions/Net/csums-alg` - string
        - `DrbdOptions/Net/csums-after-crash-only` - boolean
        - `DrbdOptions/Net/verify-alg` - string
        - `DrbdOptions/Net/use-rle` - boolean
        - `DrbdOptions/Net/socket-check-timeout` - range[`0-300`]
        - `DrbdOptions/Net/fencing` - enum
            * dont-care
            * resource-only
            * resource-and-stonith

        - `DrbdOptions/Net/max-buffers` - range[`32-131072`]
        - `DrbdOptions/Net/allow-remote-read` - boolean
        - `DrbdOptions/Handlers/after-resync-target` - string
        - `DrbdOptions/Handlers/before-resync-target` - string
        - `DrbdOptions/Handlers/before-resync-source` - string
        - `DrbdOptions/Handlers/out-of-sync` - string
        - `DrbdOptions/Handlers/quorum-lost` - string
        - `DrbdOptions/Handlers/fence-peer` - string
        - `DrbdOptions/Handlers/unfence-peer` - string
        - `DrbdOptions/Handlers/initial-split-brain` - string
        - `DrbdOptions/Handlers/local-io-error` - string
        - `DrbdOptions/Handlers/pri-lost` - string
        - `DrbdOptions/Handlers/pri-lost-after-sb` - string
        - `DrbdOptions/Handlers/pri-on-incon-degr` - string
        - `DrbdOptions/Handlers/split-brain` - string
      operationId: resourceDefinitionModify
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceDefinitionModify'
            example:
              override_props:
                Aux/testprop: "1"
              delete_props:
              - Aux/deleteprop
      responses:
        "200":
          description: resource-definition modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
    delete:
      tags:
      - developers
      summary: delete a resource-definition
      description: Delete a resource-definition
      operationId: resourceDefinitionDelete
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: resource-definition deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/resource-definitions/{resource}/clone:
    post:
      tags:
      - developers
      summary: clones a resource definition with all resources
      description: |
        Clones the resource definition with all resources and volume with the current data and
        the best/fastest possible clone method. Clone method depends on storage pool type:
          * LVM -> dd
          * LVM-thin -> snapshot -> logical volume
          * ZFS -> zfs send/recieve
      operationId: resourceDefinitionClone
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceDefinitionCloneRequest'
      responses:
        "201":
          description: resource defintion clone process started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDefinitionCloneStarted'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/clone/{resourceClone}:
    get:
      tags:
      - developers
      summary: retrieve status of the current clone process
      description: |
        Get info of the current clone status. e.g. if completed.
      operationId: resourceDefinitionCloneStatus
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: resourceClone
        in: path
        description: resource clone name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: resource defintion clone status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDefinitionCloneStatus'
        "404":
          description: object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/sync-status:
    get:
      tags:
      - developers
      summary: check if a resource is currently synced on all nodes
      description: |
        Get info if the resource is synced on all nodes
      operationId: resourceDefinitionSyncStatus
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: resource defintion sync status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDefinitionSyncStatus'
        "404":
          description: object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/files/{extFileName}:
    post:
      tags:
      - developers
      summary: enables deployment of an external file for the given resource
      description: |
        Enables deployment of a previously created external file for a resource definition.
        This has the effect that the external file will be created in a host's file
        system whenever `resource` is deployed on that host.
      operationId: resourceDeploy
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: extFileName
        in: path
        description: Name of an external file. Must be an absolute path in URL-encoding
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: '%2Fetc%2Fsome.conf'
      responses:
        "200":
          description: deployment of the external file enabled
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
    delete:
      tags:
      - developers
      summary: disables deployment of an external file for the given resource
      description: |
        Removes the requirement from this resource definition to create the given external file.
        If nothing requires the external file to exist on a satellite, the satellite also will delete the
        external file from the host's file system.
      operationId: resourceUndeploy
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: extFileName
        in: path
        description: Name of an external file. Must be an absolute path in URL-encoding
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: '%2Fetc%2Fsome.conf'
      responses:
        "200":
          description: deployment of external file disabled
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/properties/info:
    get:
      tags:
      - developers
      summary: List all resource-definition properties
      description: |
        List all properties, including their names and descriptions, that can
        be set for any given resource definition.
      responses:
        "200":
          description: |
            A map where the key is the property name and the value is a
            PropsInfo object describing the property.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/PropsInfo'
                example:
                  DrbdOptions/PeerDevice/c-fill-target:
                    prop_type: range
                    value: (0 - 1048576)
                    dflt: "100"
                    unit: bytes
                  Writecache/Options/AutocommitTime:
                    info: autocommit time in milliseconds. The data is automatically committed if this time passes and no FLUSH request is received
                    prop_type: long
                    dflt: "1000"
  /v1/resource-definitions/{resource}/volume-definitions:
    get:
      tags:
      - developers
      summary: lists all volume-definitions
      description: |
        Lists all volume definitions.

        A single volume definition can be queried by adding its name
        to the resource string like:

        /v1/resource-definitions/rsc1/volume-definitions/0
      operationId: volumeDefinitionList
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: Array of all volume-definitions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VolumeDefinition'
    post:
      tags:
      - developers
      summary: add a volume-definition to a resource
      description: |
        Adds a volume-definition.

        Required properties is only `size`, all other will be auto generated if not given.
      operationId: volumeDefinitionCreate
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeDefinitionCreate'
            example:
              volume_definition:
                size_kib: 262144
      responses:
        "201":
          description: volume-definition created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/volume-definitions/{volume_number}:
    put:
      tags:
      - developers
      summary: modify a volume-definition
      description: |
        Sets or modifies properties

        Possible properties are:
        - `StorPoolName` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name to use.

        - `StorPoolNameDrbdMeta` - regex[`^|.internal|[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name to use for external metadata.

        - `OverrideVlmId` - regex[`.*`]

            Overwrites the generated '<resource-name>_<5 digit volume number>' volume name for migration purposes

        - `FileSystem/Type` - enum

            File system type to use

            * ext4
            * xfs

        - `FileSystem/MkfsParams` - string

            Additional parameters for the mkfs command

        - `StorDriver/LvcreateType` - enum
            * linear
            * striped
            * mirror
            * raid0
            * raid1
            * raid4
            * raid5
            * raid6
            * raid10
            * lzma
            * lz4

        - `StorDriver/LvcreateOptions` - regex[`.*`]

            Additional parameters added to every 'lvcreate ... ' command

        - `StorDriver/ZfscreateOptions` - regex[`.*`]

            Additional parameters added to every 'zfs create ... ' command

        - `DrbdCurrentGi` - regex[`[a-fA-F0-9]{16}`]

            Initial DRBD generation id, if initial sync is skipped, this ID will be set

        - `sys/fs/blkio_throttle_read` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.read_bps_device

        - `sys/fs/blkio_throttle_write` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.write_bps_device

        - `sys/fs/blkio_throttle_read_iops` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.read_iops_device

        - `sys/fs/blkio_throttle_write_iops` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.write_iops_device

        - `Writecache/PoolName` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name for writecache

        - `Writecache/Size` - regex[`^100%|[0-9]{1,2}([.][0-9]*)?%|[1-9][0-9]{2,}$`]

            Size of the writecache in % (0-100) or KiB otherwise

        - `Writecache/Options/StartSector` - long

            offset from the start of cache device in 512-byte sectors

        - `Writecache/Options/HighWatermark` - long

            start writeback when the number of used blocks reach this watermark

        - `Writecache/Options/LowWatermark` - long

            stop writeback when the number of used blocks drops below this watermark

        - `Writecache/Options/WritebackJobs` - long

            limit the number of blocks that are in flight during writeback. Setting this value reduces writeback throughput, but it may improve latency of read requests

        - `Writecache/Options/AutocommitBlocks` - long

            when the application writes this amount of blocks without issuing the FLUSH request, the blocks are automatically commited

        - `Writecache/Options/AutocommitTime` - long

            autocommit time in milliseconds. The data is automatically commited if this time passes and no FLUSH request is received

        - `Writecache/Options/Fua` - enum

            "On" results in "fua" as argument, whereas the value "Off" results in "nofua" argument

            * On
            * Off

        - `Writecache/Options/Additional` - string

            Additional arguments passed through

        - `Cache/OpMode` - enum

            Operation mode

            * writeback
            * writethrough
            * passthrough

        - `Cache/MetaPool` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Name of the storage pool used for the cache metadata. If not specified, this will default to the CachePool property

        - `Cache/Metasize` - regex[`^100%|[0-9]{1,2}([.][0-9]*)?%|[1-9][0-9]{2,}$`]

            Size of the cache in % (0-100) or KiB otherwise.

        - `Cache/CachePool` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Name of the storage pool used for the cache cache device

        - `Cache/Cachesize` - regex[`^100%|[0-9]{1,2}([.][0-9]*)?%|[1-9][0-9]{2,}$`]

            Size of the cache in % (0-100) or KiB otherwise.

        - `Cache/Blocksize` - long

            Block size

        - `Cache/Policy` - enum

            Replacemant policy

            * mq
            * smq
            * cleaner

        - `DrbdOptions/Disk/on-io-error` - enum
            * pass_on
            * call-local-io-error
            * detach

        - `DrbdOptions/Disk/disk-barrier` - boolean
        - `DrbdOptions/Disk/disk-flushes` - boolean
        - `DrbdOptions/Disk/disk-drain` - boolean
        - `DrbdOptions/Disk/md-flushes` - boolean
        - `DrbdOptions/Disk/resync-after` - string
        - `DrbdOptions/Disk/al-extents` - range[`67-65534`]
        - `DrbdOptions/Disk/al-updates` - boolean
        - `DrbdOptions/Disk/discard-zeroes-if-aligned` - boolean
        - `DrbdOptions/Disk/disable-write-same` - boolean
        - `DrbdOptions/Disk/disk-timeout` - range[`0-6000`]
        - `DrbdOptions/Disk/read-balancing` - enum
            * prefer-local
            * prefer-remote
            * round-robin
            * least-pending
            * when-congested-remote
            * 32K-striping
            * 64K-striping
            * 128K-striping
            * 256K-striping
            * 512K-striping
            * 1M-striping

        - `DrbdOptions/Disk/rs-discard-granularity` - range[`0-1048576`]
      operationId: volumeDefinitionModify
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: volume_number
        in: path
        description: Volume number of the definition
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeDefinitionModify'
            example:
              override_props:
                Aux/testprop: "1"
              delete_props:
              - Aux/deleteprop
      responses:
        "200":
          description: volume-definition modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
    delete:
      tags:
      - developers
      summary: delete a volume-definition
      description: Delete a volume-definition
      operationId: volumeDefinitionDelete
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: volume_number
        in: path
        description: Volume number of the definition
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: volume-definition deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/resource-definitions/{resource}/volume-definitions/properties/info:
    get:
      tags:
      - developers
      summary: List all volume-definition properties
      description: |
        List all properties, including their names and descriptions, that can
        be set for any given volume definition of a particular resource.
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: |
            A map where the key is the property name and the value is a
            PropsInfo object describing the property.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/PropsInfo'
              example:
                StorDriver/LvcreateType:
                  prop_type: regex
                  value: (?:linear|lz4|lzma|mirror|raid0|raid1|raid10|raid4|raid5|raid6|striped)
                  dflt: linear
                DrbdOptions/Disk/disk-timeout:
                  prop_type: range
                  value: (0 - 6000)
                  dflt: "0"
                  unit: 1/10 seconds
  /v1/resource-definitions/{resource}/resources:
    get:
      tags:
      - developers
      summary: lists all resources for a resource-definition
      description: |
        Lists all resources for a resource-definition.

        A single resource can be queried by adding its name
        to the resource string like:

        /v1/resource-definitions/rsc1/resources/nodeA
      operationId: resourceList
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: Array of all resources for the resource-definition
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
    post:
      tags:
      - developers
      summary: create one or more resources.
      description: |
        Adds one or more resource(s).
      operationId: resourceCreate
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ResourceCreate'
            example:
            - resource:
                name: rsc1
                node_name: alpha
      responses:
        "201":
          description: resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/resources/{node}:
    put:
      tags:
      - developers
      summary: modify a resource
      description: |+
        Sets or modifies properties

        Possible properties are:
        - `StorPoolName` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name to use.

        - `StorPoolNameDrbdMeta` - regex[`^|.internal|[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name to use for external metadata.

        - `PrefNic` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Preferred network interface to use

        - `PeerSlots` - range[`1-31`]

            DRBD peer slots present on resource

        - `FileSystem/Type` - enum

            File system type to use

            * ext4
            * xfs

        - `FileSystem/MkfsParams` - string

            Additional parameters for the mkfs command

        - `NVMe/PrefNic` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Preferred network interface to use

        - `sys/fs/blkio_throttle_read` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.read_bps_device

        - `sys/fs/blkio_throttle_write` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.write_bps_device

        - `sys/fs/blkio_throttle_read_iops` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.read_iops_device

        - `sys/fs/blkio_throttle_write_iops` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.write_iops_device

        - `DrbdOptions/auto-diskful-allow-cleanup` - boolean_true_false

            Allows this resource to be cleaned up after toggle-disk + resync is finished

      operationId: resourceModify
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceModify'
            example:
              override_props:
                Aux/testprop: "1"
              delete_props:
              - Aux/deleteprop
      responses:
        "200":
          description: resource modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
    post:
      tags:
      - developers
      summary: create a resource on a node
      description: |
        Adds a resource on a node.

        To use a specific storage pool add the `StorPoolName` property
        and use the storage pool name as value.
        If the `StorPoolName` property is not set, the `DfltStorPool` will be used.

        To create a diskless resource you have to set the "DISKLESS" flag in the flags list.
        ```
        {
          "resource": {
            "flags": ["DISKLESS"]
          }
        }
        ```
      operationId: resourceCreateOnNode
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceCreate'
            example: {}
      responses:
        "201":
          description: resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
    delete:
      tags:
      - developers
      summary: delete a resource
      description: Delete a resource on a node
      operationId: resourceDelete
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: resource deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/resource-definitions/{resource}/resources/{node}/make-available:
    post:
      tags:
      - developers
      summary: creates the resource if not already deployed
      description: |
        Adds a resource on a node if not already deployed.

        New resources will be diskless, if possible. To force creation of
        a diskful resource, set `diskful` to `true` in the request body.

        Optionally, you can override the layer stack for the created resource.
        If not given, the default configuration for the resource definition is
        used.

        The storage pool will be selected by the autoplacer.
      operationId: resourceMakeAvailableOnNode
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceMakeAvailable'
      responses:
        "200":
          description: resource is either created or ensured to be available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/resources/{node}/activate:
    post:
      tags:
      - developers
      summary: activates the resource
      description: Activates the given resource if possible
      operationId: ActivateRsc
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Resource is now active
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/resources/{node}/deactivate:
    post:
      tags:
      - developers
      summary: deactivates the resource
      description: Deactivates the given resource if possible
      operationId: DeactivateRsc
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Resource is now inctive
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/resources/properties/info:
    get:
      tags:
      - developers
      summary: List all resource properties
      description: |
        List all properties, including their names and descriptions, that can
        be set for any given resource in a particular resource definition.
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: |
            A map where the key is the property name and the value is a
            PropsInfo object describing the property.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/PropsInfo'
              example:
                DrbdOptions/auto-diskful-allow-cleanup:
                  info: Allows this resource to be cleaned up after toggle-disk + resync is finished
                  prop_type: boolean_true_false
                  value: (?i)(?:true|false|yes|no)
                FileSystem/Type:
                  info: File system type to use
                  prop_type: regex
                  value: (?:ext4|xfs)
  /v1/resource-definitions/{resource}/resources/{node}/volumes:
    get:
      tags:
      - developers
      summary: lists all volumes of a resources
      description: |
        Lists all volumes for a resource-definition.

        A single volume can be queried by adding its volume number
        to the resource string like:

        /v1/resource-definitions/rsc1/resources/nodeA/volumes/0
      operationId: resourceVolumeList
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: Array of all volume for the resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Volume'
  /v1/resource-definitions/{resource}/resources/{node}/volumes/{volume_number}:
    put:
      tags:
      - developers
      summary: modify a volume
      description: |
        Sets or modifies properties

        Possible properties are:
        - `sys/fs/blkio_throttle_read` - number
        - `sys/fs/blkio_throttle_write` - number
      operationId: volumeModify
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: volume_number
        in: path
        description: Volume number of the definition
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeModify'
            example:
              override_props:
                Aux/testprop: "1"
              delete_props:
              - Aux/deleteprop
      responses:
        "200":
          description: volume modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/resource-definitions/{resource}/resources/{node}/volumes/properties/info:
    get:
      tags:
      - developers
      summary: List all volume properties
      description: |
        List all properties, including their names and descriptions, that can
        be set for any given volume of a particular resource on a particular node.
      parameters:
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: |
            A map where the key is the property name and the value is a
            PropsInfo object describing the property.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/PropsInfo'
              example:
                StorPoolNameDrbdMeta:
                  info: Linstor storage pool name to use for external metadata.
                  prop_type: regex
                  value: "^|.internal|[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$"
                sys/fs/blkio_throttle_write:
                  info: Sets the /sys/fs/cgroup/blkio/blkio.throttle.write_bps_device
                  prop_type: long
  /v1/resource-definitions/{resource}/resources/{node}/toggle-disk/diskless:
    put:
      tags:
      - developers
      summary: toggle a resource to diskless
      description: toggle a resource to a diskless resource
      operationId: resourceToggleDiskless
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: resource toggled to diskless
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/resources/{node}/toggle-disk/diskless/{disklesspool}:
    put:
      tags:
      - developers
      summary: toggle a resource to diskless resource
      description: |
        toggle a resource to a diskless.
      operationId: resourceToggleDisklessDisklesspool
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: disklesspool
        in: path
        description: diskless pool to use.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: resource toggled to diskless resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/resources/{node}/toggle-disk/diskful:
    put:
      tags:
      - developers
      summary: toggle a resource to a diskful resource
      description: |
        toggle a resource to a diskful resource using the default storage pool
      operationId: resourceToggleDiskful
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleDiskDiskful'
            example:
              toggle_disk:
                layer_list:
                - drbd
                - luks
                - storage
      responses:
        "200":
          description: resource toggled to diskful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/resources/{node}/toggle-disk/diskful/{storagepool}:
    put:
      tags:
      - developers
      summary: toggle a resource to a diskful resource
      description: toggle a resource to a diskful resource
      operationId: resourceToggleDiskfulStoragepool
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: storagepool
        in: path
        description: Storage pool to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleDiskDiskful'
            example:
              toggle_disk:
                layer_list:
                - drbd
                - luks
                - storage
      responses:
        "200":
          description: resource toggled to diskful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/resources/{node}/migrate-disk/{fromnode}:
    put:
      tags:
      - developers
      summary: migrate a resource to another node
      description: |
        migrate a resource to another node without reducing the redundancy count
      operationId: resourceMigrateDisk
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: fromnode
        in: path
        description: node that should be deleted after the successful migrate
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleDiskDiskful'
            example:
              toggle_disk:
                layer_list:
                - drbd
                - luks
                - storage
      responses:
        "200":
          description: resource migrated to another node
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/resources/{node}/migrate-disk/{fromnode}/{storagepool}:
    put:
      tags:
      - developers
      summary: migrate a resource to another node
      description: |
        migrate a resource to another node without reducing the redundency count
      operationId: resourceMigrateDiskStoragepool
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: fromnode
        in: path
        description: node that should be deleted after the successful migrate
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: storagepool
        in: path
        description: Storage pool to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: resource migrated to another node
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/autoplace:
    post:
      tags:
      - developers
      summary: autoplace resource
      description: |
        Auto place the resource on the specified place_count redundency.
        If place_count isn't given 2 is the default.
      operationId: resourceAutoplace
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoPlaceRequest'
            example:
              select_filter:
                place_count: 2
      responses:
        "201":
          description: resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/resource-connections:
    get:
      tags:
      - developers
      summary: list all resource connections for resource
      description: List all resource connections for resource
      operationId: resourceConnectionsList
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: list of resource connections
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceConnection'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/resource-connections/{node_a}/{node_b}:
    get:
      tags:
      - developers
      summary: show the specified resource connection
      description: show the specified resource connection
      operationId: resourceConnectionList
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node_a
        in: path
        description: source node of the connection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node_b
        in: path
        description: target node of the connection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: list of resource connections
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceConnection'
        "404":
          description: object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
    put:
      tags:
      - developers
      summary: modify a resource connection
      description: |
        Sets or modifies properties

        Possible properties are:
        - `DrbdOptions/PeerDevice/resync-rate` - range[`1-8388608`]
        - `DrbdOptions/PeerDevice/c-plan-ahead` - range[`0-300`]
        - `DrbdOptions/PeerDevice/c-delay-target` - range[`1-100`]
        - `DrbdOptions/PeerDevice/c-fill-target` - range[`0-1048576`]
        - `DrbdOptions/PeerDevice/c-max-rate` - range[`250-4194304`]
        - `DrbdOptions/PeerDevice/c-min-rate` - range[`0-4194304`]
        - `DrbdOptions/PeerDevice/bitmap` - boolean
        - `DrbdOptions/Net/transport` - string
        - `DrbdOptions/Net/protocol` - enum
            * A
            * B
            * C

        - `DrbdOptions/Net/timeout` - range[`1-600`]
        - `DrbdOptions/Net/max-epoch-size` - range[`1-20000`]
        - `DrbdOptions/Net/connect-int` - range[`1-120`]
        - `DrbdOptions/Net/ping-int` - range[`1-120`]
        - `DrbdOptions/Net/sndbuf-size` - range[`0-10485760`]
        - `DrbdOptions/Net/rcvbuf-size` - range[`0-10485760`]
        - `DrbdOptions/Net/ko-count` - range[`0-200`]
        - `DrbdOptions/Net/allow-two-primaries` - boolean
        - `DrbdOptions/Net/cram-hmac-alg` - string
        - `DrbdOptions/Net/shared-secret` - string
        - `DrbdOptions/Net/after-sb-0pri` - enum
            * disconnect
            * discard-younger-primary
            * discard-older-primary
            * discard-zero-changes
            * discard-least-changes
            * discard-local
            * discard-remote

        - `DrbdOptions/Net/after-sb-1pri` - enum
            * disconnect
            * consensus
            * discard-secondary
            * call-pri-lost-after-sb
            * violently-as0p

        - `DrbdOptions/Net/after-sb-2pri` - enum
            * disconnect
            * call-pri-lost-after-sb
            * violently-as0p

        - `DrbdOptions/Net/always-asbp` - boolean
        - `DrbdOptions/Net/rr-conflict` - enum
            * disconnect
            * call-pri-lost
            * violently
            * retry-connect

        - `DrbdOptions/Net/ping-timeout` - range[`1-300`]
        - `DrbdOptions/Net/data-integrity-alg` - string
        - `DrbdOptions/Net/tcp-cork` - boolean
        - `DrbdOptions/Net/on-congestion` - enum
            * block
            * pull-ahead
            * disconnect

        - `DrbdOptions/Net/congestion-fill` - range[`0-20971520`]
        - `DrbdOptions/Net/congestion-extents` - range[`67-65534`]
        - `DrbdOptions/Net/csums-alg` - string
        - `DrbdOptions/Net/csums-after-crash-only` - boolean
        - `DrbdOptions/Net/verify-alg` - string
        - `DrbdOptions/Net/use-rle` - boolean
        - `DrbdOptions/Net/socket-check-timeout` - range[`0-300`]
        - `DrbdOptions/Net/fencing` - enum
            * dont-care
            * resource-only
            * resource-and-stonith

        - `DrbdOptions/Net/max-buffers` - range[`32-131072`]
        - `DrbdOptions/Net/allow-remote-read` - boolean
      operationId: resourceConnectionModify
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node_a
        in: path
        description: source node of the connection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node_b
        in: path
        description: target node of the connection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceConnectionModify'
      responses:
        "200":
          description: resource connection modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "404":
          description: object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/resource-connections/properties/info:
    get:
      tags:
      - developers
      summary: List all resource-connection properties
      description: |
        List all properties, including their names and descriptions, that can
        be set for any given connection of a particular resource.
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: |
            A map where the key is the property name and the value is a
            PropsInfo object describing the property.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/PropsInfo'
              example:
                DrbdOptions/PeerDevice/resync-rate:
                  prop_type: range
                  value: (1 - 8388608)
                  dflt: "250"
                  unit: bytes/second
                DrbdOptions/Net/fencing:
                  prop_type: regex
                  value: (?:dont-care|resource-and-stonith|resource-only)
  /v1/resource-definitions/{resource}/snapshots:
    get:
      tags:
      - developers
      summary: list snapshots
      description: List snapshots for a resource
      operationId: resourceSnapshotsList
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Snapshots for the resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Snapshot'
    post:
      tags:
      - developers
      summary: create a snapshot
      description: Create a snapshot for a resource
      operationId: resourceSnapshotCreate
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snapshot'
            example:
              name: snap1
      responses:
        "201":
          description: Snapshot created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/snapshots/{snapshot}:
    get:
      tags:
      - developers
      summary: list a specific snapshot
      description: List the given snapshot for a resource
      operationId: resourceSnapshotList
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: snapshot
        in: path
        description: Snapshot name to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Snapshot for the resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
    delete:
      tags:
      - developers
      summary: delete a snapshot
      description: Delete a snapshot
      operationId: resourceSnapshotDelete
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: snapshot
        in: path
        description: Snapshot name to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: nodes
        in: query
        description: Only delete snapshots of the given nodes.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: Snapshot deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/snapshot-restore-resource/{snapshot}:
    post:
      tags:
      - developers
      summary: restore a snapshot
      description: Restore a snapshot to a new resource
      operationId: resourceSnapshotRestore
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: snapshot
        in: path
        description: Snapshot name to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotRestore'
      responses:
        "200":
          description: Snapshot restored
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/snapshot-restore-volume-definition/{snapshot}:
    post:
      tags:
      - developers
      summary: restore a snapshot volume definition
      description: Restore a snapshot volume definition to a new resource
      operationId: resourceSnapshotsRestoreVolumeDefinition
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: snapshot
        in: path
        description: Snapshot name to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotRestore'
      responses:
        "200":
          description: Snapshot restored
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/snapshot-rollback/{snapshot}:
    post:
      tags:
      - developers
      summary: rollback a snapshot
      description: Rollback a resource to the snapshot state
      operationId: resourceSnapshotRollback
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: snapshot
        in: path
        description: Snapshot name to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Snapshot rollbacked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/snapshot-shipping:
    post:
      tags:
      - developers
      summary: ship a snapshot
      description: Transfers the resource from one node to another based on snapshot-shipping
      operationId: snapshotShipping
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotShipping'
      responses:
        "200":
          description: Snapshot shipping in progress
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-groups:
    get:
      tags:
      - developers
      summary: lists all resource-groups
      description: |
        Lists all resource groups.

        A single resource group can be queried by adding its name
        to the resource string like:

        /v1/resource-groups/rscgrp1
      operationId: resourceGroupList
      parameters:
      - name: resource_groups
        in: query
        description: "Filter only for the specified resource groups, if not specified no filtering."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: props
        in: query
        description: "filter by given properties, full property path"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: Array of all resource-groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceGroup'
    post:
      tags:
      - developers
      summary: add a resource-group
      description: |
        Adds a resource-group.

        Only required property is the name of the resource group.
        All other properties are optional.
      operationId: resourceGroupCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceGroup'
            example:
              name: rscgrp1
      responses:
        "201":
          description: resource-group created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/stats/resource-groups:
    get:
      tags:
      - developers
      summary: Return stats of all resource groups.
      description: |
        Returns a resource group stats object.
      operationId: resourceGroupStats
      responses:
        "200":
          description: Object stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupStats'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/resource-groups/{resource_group}:
    put:
      tags:
      - developers
      summary: modify a resource-group
      description: |
        Sets or modifies properties

        Possible properties are:
        - `StorPoolName` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name to use.

        - `PeerSlotsNewResource` - range[`1-31`]

            DRBD peer slots to allocate for newly created resources (default 7), the number of peer slots cannot be changed once the resource is created, so allow sufficient slots to increase redundancy in the future

        - `DrbdProxy/CompressionType` - enum
            * zlib
            * lzma
            * lz4

        - `FileSystem/Type` - enum

            File system type to use

            * ext4
            * xfs

        - `FileSystem/MkfsParams` - string

            Additional parameters for the mkfs command

        - `NVMe/enabled` - enum
            * rdma
            * tcp

        - `NVMe/enabled` - range[`1-65535`]
        - `DrbdOptions/Disk/read-balancing` - enum
            * prefer-local
            * prefer-remote
            * round-robin
            * least-pending
            * when-congested-remote
            * 32K-striping
            * 64K-striping
            * 128K-striping
            * 256K-striping
            * 512K-striping
            * 1M-striping

        - `DrbdOptions/Disk/on-io-error` - enum
            * pass_on
            * call-local-io-error
            * detach

        - `DrbdOptions/Disk/disk-drain` - boolean
        - `DrbdOptions/Disk/resync-after` - string
        - `DrbdOptions/Disk/disk-timeout` - range[`0-6000`]
        - `DrbdOptions/Disk/disable-write-same` - boolean
        - `DrbdOptions/Disk/rs-discard-granularity` - range[`0-1048576`]
        - `DrbdOptions/Disk/disk-flushes` - boolean
        - `DrbdOptions/Disk/al-extents` - range[`67-65534`]
        - `DrbdOptions/Disk/al-updates` - boolean
        - `DrbdOptions/Disk/md-flushes` - boolean
        - `DrbdOptions/Disk/disk-barrier` - boolean
        - `DrbdOptions/Disk/discard-zeroes-if-aligned` - boolean
        - `DrbdOptions/PeerDevice/c-fill-target` - range[`0-1048576`]
        - `DrbdOptions/PeerDevice/c-max-rate` - range[`250-4194304`]
        - `DrbdOptions/PeerDevice/resync-rate` - range[`1-8388608`]
        - `DrbdOptions/PeerDevice/c-delay-target` - range[`1-100`]
        - `DrbdOptions/PeerDevice/c-min-rate` - range[`0-4194304`]
        - `DrbdOptions/PeerDevice/bitmap` - boolean
        - `DrbdOptions/PeerDevice/c-plan-ahead` - range[`0-300`]
        - `DrbdOptions/Resource/peer-ack-delay` - range[`1-10000`]
        - `DrbdOptions/Resource/quorum-minimum-redundancy` - enum [`1-32`]
            * off
            * majority
            * all

        - `DrbdOptions/Resource/max-io-depth` - range[`4-4294967295`]
        - `DrbdOptions/Resource/auto-promote-timeout` - range[`0-600`]
        - `DrbdOptions/Resource/quorum` - enum [`1-32`]
            * off
            * majority
            * all

        - `DrbdOptions/Resource/on-no-data-accessible` - enum
            * io-error
            * suspend-io

        - `DrbdOptions/Resource/auto-promote` - boolean
        - `DrbdOptions/Resource/cpu-mask` - string
        - `DrbdOptions/Resource/twopc-timeout` - range[`50-600`]
        - `DrbdOptions/Resource/twopc-retry-timeout` - range[`1-50`]
        - `DrbdOptions/Resource/peer-ack-window` - range[`2048-204800`]
        - `DrbdOptions/Resource/on-no-quorum` - enum
            * io-error
            * suspend-io

        - `DrbdOptions/Net/max-epoch-size` - range[`1-20000`]
        - `DrbdOptions/Net/protocol` - enum
            * A
            * B
            * C

        - `DrbdOptions/Net/allow-two-primaries` - boolean
        - `DrbdOptions/Net/after-sb-0pri` - enum
            * disconnect
            * discard-younger-primary
            * discard-older-primary
            * discard-zero-changes
            * discard-least-changes
            * discard-local
            * discard-remote

        - `DrbdOptions/Net/ko-count` - range[`0-200`]
        - `DrbdOptions/Net/data-integrity-alg` - string
        - `DrbdOptions/Net/ping-timeout` - range[`1-300`]
        - `DrbdOptions/Net/sndbuf-size` - range[`0-10485760`]
        - `DrbdOptions/Net/transport` - string
        - `DrbdOptions/Net/rcvbuf-size` - range[`0-10485760`]
        - `DrbdOptions/Net/max-buffers` - range[`32-131072`]
        - `DrbdOptions/Net/fencing` - enum
            * dont-care
            * resource-only
            * resource-and-stonith

        - `DrbdOptions/Net/csums-alg` - string
        - `DrbdOptions/Net/always-asbp` - boolean
        - `DrbdOptions/Net/congestion-extents` - range[`67-65534`]
        - `DrbdOptions/Net/on-congestion` - enum
            * block
            * pull-ahead
            * disconnect

        - `DrbdOptions/Net/ping-int` - range[`1-120`]
        - `DrbdOptions/Net/rr-conflict` - enum
            * disconnect
            * call-pri-lost
            * violently

        - `DrbdOptions/Net/tcp-cork` - boolean
        - `DrbdOptions/Net/use-rle` - boolean
        - `DrbdOptions/Net/csums-after-crash-only` - boolean
        - `DrbdOptions/Net/socket-check-timeout` - range[`0-300`]
        - `DrbdOptions/Net/congestion-fill` - range[`0-20971520`]
        - `DrbdOptions/Net/cram-hmac-alg` - string
        - `DrbdOptions/Net/verify-alg` - string
        - `DrbdOptions/Net/shared-secret` - string
        - `DrbdOptions/Net/connect-int` - range[`1-120`]
        - `DrbdOptions/Net/timeout` - range[`1-600`]
        - `DrbdOptions/Net/after-sb-2pri` - enum
            * disconnect
            * call-pri-lost-after-sb
            * violently-as0p

        - `DrbdOptions/Net/after-sb-1pri` - enum
            * disconnect
            * consensus
            * discard-secondary
            * call-pri-lost-after-sb
            * violently-as0p

        - `DrbdOptions/Handlers/after-resync-target` - string
        - `DrbdOptions/Handlers/before-resync-target` - string
        - `DrbdOptions/Handlers/before-resync-source` - string
        - `DrbdOptions/Handlers/out-of-sync` - string
        - `DrbdOptions/Handlers/quorum-lost` - string
        - `DrbdOptions/Handlers/fence-peer` - string
        - `DrbdOptions/Handlers/unfence-peer` - string
        - `DrbdOptions/Handlers/initial-split-brain` - string
        - `DrbdOptions/Handlers/local-io-error` - string
        - `DrbdOptions/Handlers/pri-lost` - string
        - `DrbdOptions/Handlers/pri-lost-after-sb` - string
        - `DrbdOptions/Handlers/pri-on-incon-degr` - string
        - `DrbdOptions/Handlers/split-brain` - string
      operationId: resourceGroupModify
      parameters:
      - name: resource_group
        in: path
        description: resource group to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceGroupModify'
            example:
              override_props:
                Aux/testprop: "1"
              delete_props:
              - Aux/deleteprop
      responses:
        "200":
          description: resource-group modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
    delete:
      tags:
      - developers
      summary: delete a resource-group
      description: Delete a resource-group
      operationId: resourceGroupDelete
      parameters:
      - name: resource_group
        in: path
        description: resource group to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: resource-group deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/resource-groups/properties/info:
    get:
      tags:
      - developers
      summary: List all resource-group properties
      description: |
        List all properties, including their names and descriptions, that can
        be set for any given resource group.
      responses:
        "200":
          description: |
            A map where the key is the property name and the value is a
            PropsInfo object describing the property.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/PropsInfo'
              example:
                Writecache/Options/AutocommitBlocks:
                  info: "when the application writes this amount of blocks without issuing the FLUSH request, the blocks are automatically committed"
                  prop_type: long
                  dflt: "64 for pmem, 65536 for ssd"
                DrbdOptions/Resource/peer-ack-delay:
                  prop_type: range
                  value: (1 - 10000)
                  dflt: "100"
                  unit: milliseconds
  /v1/resource-groups/{resource_group}/spawn:
    post:
      tags:
      - developers
      summary: create a new resource-definition based on the given resource-group
      description: |
        Creates a new resource-definition and auto-deploys if configured to do so.
      operationId: resourceGroupSpawn
      parameters:
      - name: resource_group
        in: path
        description: resource group to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceGroupSpawn'
            example:
              resource_definition_name: res1
              volume_sizes:
              - 1048576
              - 20971520
      responses:
        "201":
          description: resource-definition created and auto-deployed if configured accordingly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-groups/{resource_group}/volume-groups:
    get:
      tags:
      - developers
      summary: lists all volume-groups
      description: |
        Lists all volume groups.

        A single volume group can be queried by adding its name
        to the resource string like:

        /v1/resource-groups/rscgrp1/volume-groups/0
      operationId: volumeGroupList
      parameters:
      - name: resource_group
        in: path
        description: resource group to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: Array of all volume-groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VolumeGroup'
    post:
      tags:
      - developers
      summary: add a volume-group to a resource-group
      description: |
        Adds a volume-group.
      operationId: volumeGroupCreate
      parameters:
      - name: resource_group
        in: path
        description: resource group to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeGroup'
      responses:
        "201":
          description: volume-group created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-groups/{resource_group}/volume-groups/{volume_number}:
    put:
      tags:
      - developers
      summary: modify a volume-group
      description: |
        Sets or modifies properties

        Possible properties are:
        - `StorPoolName` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name to use.

        - `OverrideVlmId` - regex[`.*`]

            Overwrites the generated '<resource-name>_<5 digit volume number>' volume name for migration purposes

        - `AllowLargerVolumeSize` - boolean_true_false

            Do not fail when the underlying volume is larger than expected

        - `FileSystem/Type` - enum

            File system type to use

            * ext4
            * xfs

        - `FileSystem/MkfsParams` - string

            Additional parameters for the mkfs command

        - `StorDriver/LvcreateType` - enum
            * linear
            * striped
            * mirror
            * raid0
            * raid1
            * raid4
            * raid5
            * raid6
            * raid10
            * lzma
            * lz4

        - `DrbdCurrentGi` - regex[`[a-fA-F0-9]{16}`]
        - `DrbdOptions/Disk/read-balancing` - enum
            * prefer-local
            * prefer-remote
            * round-robin
            * least-pending
            * when-congested-remote
            * 32K-striping
            * 64K-striping
            * 128K-striping
            * 256K-striping
            * 512K-striping
            * 1M-striping

        - `DrbdOptions/Disk/on-io-error` - enum
            * pass_on
            * call-local-io-error
            * detach

        - `DrbdOptions/Disk/disk-drain` - boolean
        - `DrbdOptions/Disk/resync-after` - string
        - `DrbdOptions/Disk/disk-timeout` - range[`0-6000`]
        - `DrbdOptions/Disk/disable-write-same` - boolean
        - `DrbdOptions/Disk/rs-discard-granularity` - range[`0-1048576`]
        - `DrbdOptions/Disk/disk-flushes` - boolean
        - `DrbdOptions/Disk/al-extents` - range[`67-65534`]
        - `DrbdOptions/Disk/al-updates` - boolean
        - `DrbdOptions/Disk/md-flushes` - boolean
        - `DrbdOptions/Disk/disk-barrier` - boolean
        - `DrbdOptions/Disk/discard-zeroes-if-aligned` - boolean
      operationId: volumeGroupModify
      parameters:
      - name: resource_group
        in: path
        description: resource group to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: volume_number
        in: path
        description: Volume number of the definition
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeGroupModify'
            example:
              override_props:
                Aux/testprop: "1"
              delete_props:
              - Aux/deleteprop
      responses:
        "200":
          description: volume-group modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
    delete:
      tags:
      - developers
      summary: delete a volume-group
      description: Delete a volume-group
      operationId: volumeGroupDelete
      parameters:
      - name: resource_group
        in: path
        description: resource group to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: volume_number
        in: path
        description: Volume number of the definition
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: volume-group deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/resource-groups/{resource_group}/volume-groups/properties/info:
    get:
      tags:
      - developers
      summary: List all volume-group properties
      description: |
        List all properties, including their names and descriptions, that can
        be set for any given volume group of a particular resource group.
      parameters:
      - name: resource_group
        in: path
        description: resource group to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: |
            A map where the key is the property name and the value is a
            PropsInfo object describing the property.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/PropsInfo'
              example:
                Cache/Policy:
                  info: Replacement policy
                  prop_type: regex
                  value: (?:cleaner|mq|smq)
                  dflt: smq
                StorPoolNameDrbdMeta:
                  info: Linstor storage pool name to use for external metadata.
                  prop_type: regex
                  value: "^|.internal|[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$"
  /v1/resource-groups/{resource_group}/query-max-volume-size:
    get:
      tags:
      - developers
      summary: query the maximum volume size from a given resource group
      description: Query the maximum possible volume size storage pools
      operationId: queryMaxVolumeSizeFromRscGrp
      parameters:
      - name: resource_group
        in: path
        description: resource group to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: list of usable storage pools
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxVolumeSizes'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
      deprecated: true
  /v1/resource-groups/{resource_group}/query-size-info:
    post:
      tags:
      - developers
      summary: query size information of the current resource group
      description: |
        Query size information like maximum volume size for the next
        spawn command. The result will include the selected storage pools.
      operationId: querySizeInfo
      parameters:
      - name: resource_group
        in: path
        description: resource group to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuerySizeInfoRequest'
      responses:
        "200":
          description: collection of size info and list of usable storage pools
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerySizeInfoResponse'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-groups/{resource_group}/adjust:
    post:
      tags:
      - developers
      summary: adjusts (calls autoplace for) all resource-definitions of the given resource-group
      description: |
        Adjusts (calls autoplace for) all resource-definitions of the given resource-group
      operationId: resourceGroupAdjust
      parameters:
      - name: resource_group
        in: path
        description: resource group to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceGroupAdjust'
      responses:
        "200":
          description: resource-definitions adjusted as configured. Might have created new resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-groups/adjustall:
    post:
      tags:
      - developers
      summary: adjusts (calls autoplace for) all resource-definitions of all resource-groups
      description: |
        Adjusts (calls autoplace for) all resource-definitions of all resource-groups
      operationId: resourceGroupAdjustAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceGroupAdjust'
      responses:
        "200":
          description: resource-definitions adjusted as configured. Might have created new resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/controller/properties:
    get:
      tags:
      - developers
      summary: lists all controller properties
      description: |
        Lists all controller properties.
      operationId: controllerPropertyList
      responses:
        "200":
          description: A string to string map with all properties
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Properties'
    post:
      tags:
      - developers
      summary: sets or modifies controller properties
      description: |
        Sets or modifies properties

        Possible properties are:
        - `TcpPortAutoRange` - regex[`[0-9]+-[0-9]+`]

            Range for auto-allocation of resource TCP ports

        - `MinorNrAutoRange` - regex[`[0-9]+-[0-9]+`]

            Range for auto-allocation of volume minor numbers

        - `PeerSlotsNewResource` - range[`1-31`]

            DRBD peer slots to allocate for newly created resources (default 7), the number of peer slots cannot be changed once the resource is created, so allow sufficient slots to increase redundancy in the future

        - `StorDriver/DMStats` - boolean_true_false

            Enable dmstats on lvm create

        - `REST/disable-http-metrics` - boolean_true_false

            Disable Prometheus /metrics on HTTP, if HTTPS is enabled

        - `DrbdOptions/AutoEvictAfterTime` - long

            Time a node can be offline before it is declared EVICTED in minutes

        - `DrbdOptions/AutoEvictMaxDisconnectedNodes` - range[`0-100`]

            Percentage(0-100) of nodes that can disconnect at the same time without the controller stopping the max_offline_time timer

        - `DrbdOptions/AutoEvictMinReplicaCount` - long

            The minimum amount of replicas that should be present for a resource at all times.

        - `DrbdOptions/AutoEvictAllowEviction` - boolean_true_false

            If set to true on a node, it cannot be evicted anymore

        - `NVMe/TRType` - enum

            NVMe transportion type

            * rdma
            * tcp

        - `NVMe/Port` - range[`1-65535`]

            NVMe port

        - `NVMe/PrefNic` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Preferred network interface to use

        - `StorDriver/WaitTimeoutAfterCreate` - regex[`[0-9]+`]
        - `sys/fs/blkio_throttle_read` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.read_bps_device

        - `sys/fs/blkio_throttle_write` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.write_bps_device

        - `sys/fs/blkio_throttle_read_iops` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.read_iops_device

        - `sys/fs/blkio_throttle_write_iops` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.write_iops_device

        - `SearchDomain` - string

            Search domain node names, if no FQDN is given.

        - `ExtCmdWaitTimeout` - long

            Wait timeout for an external command in milliseconds

        - `DrbdOptions/auto-quorum` - enum

            Enables automatic setting of the 'quroum' and 'on-no-quroum' property

            * io-error
            * suspend-io
            * disabled

        - `DrbdOptions/auto-add-quorum-tiebreaker` - boolean_true_false

            Enables automatic management (creation and deletion) of tie breaking resource

        - `DrbdOptions/auto-diskful` - long

            Makes a resource diskful if it was continously diskless primary for X minutes

        - `DrbdOptions/auto-diskful-allow-cleanup` - boolean_true_false

            Allows this resource to be cleaned up after toggle-disk + resync is finished

        - `Writecache/PoolName` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name for writecache

        - `Writecache/Size` - regex[`^100%|[0-9]{1,2}([.][0-9]*)?%|[1-9][0-9]{2,}$`]

            Size of the writecache in % (0-100) or KiB otherwise

        - `Writecache/Options/StartSector` - long

            offset from the start of cache device in 512-byte sectors

        - `Writecache/Options/HighWatermark` - long

            start writeback when the number of used blocks reach this watermark

        - `Writecache/Options/LowWatermark` - long

            stop writeback when the number of used blocks drops below this watermark

        - `Writecache/Options/WritebackJobs` - long

            limit the number of blocks that are in flight during writeback. Setting this value reduces writeback throughput, but it may improve latency of read requests

        - `Writecache/Options/AutocommitBlocks` - long

            when the application writes this amount of blocks without issuing the FLUSH request, the blocks are automatically commited

        - `Writecache/Options/AutocommitTime` - long

            autocommit time in milliseconds. The data is automatically commited if this time passes and no FLUSH request is received

        - `Writecache/Options/Fua` - enum

            "On" results in "fua" as argument, whereas the value "Off" results in "nofua" argument

            * On
            * Off

        - `Writecache/Options/Additional` - string

            Additional arguments passed through

        - `Cache/OpMode` - enum

            Operation mode

            * writeback
            * writethrough
            * passthrough

        - `Cache/MetaPool` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Name of the storage pool used for the cache metadata. If not specified, this will default to the CachePool property

        - `Cache/Metasize` - regex[`^100%|[0-9]{1,2}([.][0-9]*)?%|[1-9][0-9]{2,}$`]

            Size of the cache in % (0-100) or KiB otherwise.

        - `Cache/CachePool` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Name of the storage pool used for the cache cache device

        - `Cache/Cachesize` - regex[`^100%|[0-9]{1,2}([.][0-9]*)?%|[1-9][0-9]{2,}$`]

            Size of the cache in % (0-100) or KiB otherwise.

        - `Cache/Blocksize` - long

            Block size

        - `Cache/Policy` - enum

            Replacemant policy

            * mq
            * smq
            * cleaner

        - `StorDriver/LvcreateOptions` - regex[`.*`]

            Additional parameters added to every 'lvcreate ... ' command

        - `StorDriver/ZfscreateOptions` - regex[`.*`]

            Additional parameters added to every 'zfs create ... ' command

        - `StorDriver/Openflex/ApiHost` - regex[`.+`]

            Openflex API host name

        - `StorDriver/Openflex/ApiPort` - regex[`[0-9]+`]

            Openflex API port

        - `StorDriver/Openflex/UserName` - regex[`.+`]

            Openflex user name

        - `StorDriver/Openflex/UserPassword` - regex[`.+`]

            Openflex password

        - `StorDriver/Openflex/JobWaitDelay` - regex[`[0-9]+`]

            Delay in milliseconds linstor waits between fetching the job status

        - `StorDriver/Openflex/JobWaitMaxCount` - regex[`[0-9]+`]

            Maximum retries with wait delay until openflex fails

        - `Autoplacer/Weights/MaxFreeSpace` - regex[`^[0-9]+([.][0-9]+)?`]

            Weight of 'MaxFreeSpace' autoplacer-strategy

        - `Autoplacer/Weights/MinReservedSpace` - regex[`^[0-9]+([.][0-9]+)?`]

            Weight of 'MinReservedSpace' autoplacer-strategy

        - `Autoplacer/Weights/MinRscCount` - regex[`^[0-9]+([.][0-9]+)?`]

            Weight of 'MinRscCount' autoplacer-strategy

        - `Autoplacer/Weights/MaxThroughput` - regex[`^[0-9]+([.][0-9]+)?`]

            Weight of 'MaxThroughput' autoplacer-strategy

        - `Autoplacer/PreSelectScript` - string

            Filename of the preselection script. File must be in /etc/linstor/selector/

        - `Autoplacer/PreSelectScriptTimeout` - long

            Timeout in ms Linstor waits for the script to run.

        - `Autoplacer/MaxThroughput` - long

            The maximum throughput the given storage pool is capable of.

        - `DrbdProxy/AutoEnable` - boolean_true_false
        - `Site` - string
        - `UpdateCacheInterval` - long

            Interval for space cache background updates in seconds

        - `SnapshotShipping/TcpPortRange` - regex[`[0-9]+-[0-9]+`]

            Range for allocation of snapshot shipping TCP ports

        - `DrbdOptions/Disk/on-io-error` - enum
            * pass_on
            * call-local-io-error
            * detach

        - `DrbdOptions/Disk/disk-barrier` - boolean
        - `DrbdOptions/Disk/disk-flushes` - boolean
        - `DrbdOptions/Disk/disk-drain` - boolean
        - `DrbdOptions/Disk/md-flushes` - boolean
        - `DrbdOptions/Disk/resync-after` - string
        - `DrbdOptions/Disk/al-extents` - range[`67-65534`]
        - `DrbdOptions/Disk/al-updates` - boolean
        - `DrbdOptions/Disk/discard-zeroes-if-aligned` - boolean
        - `DrbdOptions/Disk/disable-write-same` - boolean
        - `DrbdOptions/Disk/disk-timeout` - range[`0-6000`]
        - `DrbdOptions/Disk/read-balancing` - enum
            * prefer-local
            * prefer-remote
            * round-robin
            * least-pending
            * when-congested-remote
            * 32K-striping
            * 64K-striping
            * 128K-striping
            * 256K-striping
            * 512K-striping
            * 1M-striping

        - `DrbdOptions/Disk/rs-discard-granularity` - range[`0-1048576`]
        - `DrbdOptions/PeerDevice/resync-rate` - range[`1-8388608`]
        - `DrbdOptions/PeerDevice/c-plan-ahead` - range[`0-300`]
        - `DrbdOptions/PeerDevice/c-delay-target` - range[`1-100`]
        - `DrbdOptions/PeerDevice/c-fill-target` - range[`0-1048576`]
        - `DrbdOptions/PeerDevice/c-max-rate` - range[`250-4194304`]
        - `DrbdOptions/PeerDevice/c-min-rate` - range[`0-4194304`]
        - `DrbdOptions/PeerDevice/bitmap` - boolean
        - `DrbdOptions/Resource/cpu-mask` - string
        - `DrbdOptions/Resource/on-no-data-accessible` - enum
            * io-error
            * suspend-io

        - `DrbdOptions/Resource/auto-promote` - boolean
        - `DrbdOptions/Resource/peer-ack-window` - range[`2048-204800`]
        - `DrbdOptions/Resource/peer-ack-delay` - range[`1-10000`]
        - `DrbdOptions/Resource/twopc-timeout` - range[`50-600`]
        - `DrbdOptions/Resource/twopc-retry-timeout` - range[`1-50`]
        - `DrbdOptions/Resource/auto-promote-timeout` - range[`0-600`]
        - `DrbdOptions/Resource/max-io-depth` - range[`4-4294967295`]
        - `DrbdOptions/Resource/quorum` - enum [`1-32`]
            * off
            * majority
            * all

        - `DrbdOptions/Resource/on-no-quorum` - enum
            * io-error
            * suspend-io

        - `DrbdOptions/Resource/quorum-minimum-redundancy` - enum [`1-32`]
            * off
            * majority
            * all

        - `DrbdOptions/Net/transport` - string
        - `DrbdOptions/Net/protocol` - enum
            * A
            * B
            * C

        - `DrbdOptions/Net/timeout` - range[`1-600`]
        - `DrbdOptions/Net/max-epoch-size` - range[`1-20000`]
        - `DrbdOptions/Net/connect-int` - range[`1-120`]
        - `DrbdOptions/Net/ping-int` - range[`1-120`]
        - `DrbdOptions/Net/sndbuf-size` - range[`0-10485760`]
        - `DrbdOptions/Net/rcvbuf-size` - range[`0-10485760`]
        - `DrbdOptions/Net/ko-count` - range[`0-200`]
        - `DrbdOptions/Net/allow-two-primaries` - boolean
        - `DrbdOptions/Net/cram-hmac-alg` - string
        - `DrbdOptions/Net/shared-secret` - string
        - `DrbdOptions/Net/after-sb-0pri` - enum
            * disconnect
            * discard-younger-primary
            * discard-older-primary
            * discard-zero-changes
            * discard-least-changes
            * discard-local
            * discard-remote

        - `DrbdOptions/Net/after-sb-1pri` - enum
            * disconnect
            * consensus
            * discard-secondary
            * call-pri-lost-after-sb
            * violently-as0p

        - `DrbdOptions/Net/after-sb-2pri` - enum
            * disconnect
            * call-pri-lost-after-sb
            * violently-as0p

        - `DrbdOptions/Net/always-asbp` - boolean
        - `DrbdOptions/Net/rr-conflict` - enum
            * disconnect
            * call-pri-lost
            * violently
            * retry-connect

        - `DrbdOptions/Net/ping-timeout` - range[`1-300`]
        - `DrbdOptions/Net/data-integrity-alg` - string
        - `DrbdOptions/Net/tcp-cork` - boolean
        - `DrbdOptions/Net/on-congestion` - enum
            * block
            * pull-ahead
            * disconnect

        - `DrbdOptions/Net/congestion-fill` - range[`0-20971520`]
        - `DrbdOptions/Net/congestion-extents` - range[`67-65534`]
        - `DrbdOptions/Net/csums-alg` - string
        - `DrbdOptions/Net/csums-after-crash-only` - boolean
        - `DrbdOptions/Net/verify-alg` - string
        - `DrbdOptions/Net/use-rle` - boolean
        - `DrbdOptions/Net/socket-check-timeout` - range[`0-300`]
        - `DrbdOptions/Net/fencing` - enum
            * dont-care
            * resource-only
            * resource-and-stonith

        - `DrbdOptions/Net/max-buffers` - range[`32-131072`]
        - `DrbdOptions/Net/allow-remote-read` - boolean
        - `DrbdOptions/Handlers/after-resync-target` - string
        - `DrbdOptions/Handlers/before-resync-target` - string
        - `DrbdOptions/Handlers/before-resync-source` - string
        - `DrbdOptions/Handlers/out-of-sync` - string
        - `DrbdOptions/Handlers/quorum-lost` - string
        - `DrbdOptions/Handlers/fence-peer` - string
        - `DrbdOptions/Handlers/unfence-peer` - string
        - `DrbdOptions/Handlers/initial-split-brain` - string
        - `DrbdOptions/Handlers/local-io-error` - string
        - `DrbdOptions/Handlers/pri-lost` - string
        - `DrbdOptions/Handlers/pri-lost-after-sb` - string
        - `DrbdOptions/Handlers/pri-on-incon-degr` - string
        - `DrbdOptions/Handlers/split-brain` - string
      operationId: controllerPropertyModify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControllerPropsModify'
            example:
              override_props:
                Aux/testprop: myprop
      responses:
        "201":
          description: Controller property created/modifed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/controller/properties/{key}:
    delete:
      tags:
      - developers
      summary: Deletes a controller property
      description: Delete a controller property
      operationId: controllerPropertyDelete
      parameters:
      - name: key
        in: path
        description: Controller property key to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: property deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/controller/properties/info:
    get:
      tags:
      - developers
      summary: List all controller properties
      description: |
        List all properties, including their names and descriptions, that can
        be set for the LINSTOR controller.
      responses:
        "200":
          description: |
            A map where the key is the property name and the value is a
            PropsInfo object describing the property.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/PropsInfo'
              example:
                ExtCmdWaitTimeout:
                  info: Wait timeout for an external command in milliseconds
                  prop_type: long
                Autoplacer/Weights/MinReservedSpace:
                  info: Weight of 'MinReservedSpace' autoplacer-strategy
                  prop_type: regex
                  value: "^[0-9]+([.][0-9]+)?"
                  dflt: "0.0"
  /v1/controller/properties/info/all:
    get:
      tags:
      - developers
      summary: List all properties of all entities
      description: |
        List all properties, including their names and descriptions, that can
        be set for any entity in the cluster. This includes the controller,
        resource definitions, resource groups, connections, volumes, etc.
      responses:
        "200":
          description: |
            A structure that maps entity types to a map of their properties.
            The key is the entity type in uppercase. The value is a map
            where the key is the property name and the value is a PropsInfo
            object describing the property.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/PropsInfo'
              example:
                NODE:
                  Cache/CachePool:
                    info: Name of the storage pool used for the cache cache device
                    prop_type: regex
                    value: "^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$"
                  Writecache/Options/LowWatermark:
                    info: stop writeback when the number of used blocks drops below this watermark
                    prop_type: long
                    dflt: "45"
                STORAGEPOOL_DEFINITION:
                  MaxOversubscriptionRatio:
                    info: Maximum allowed ratio of the sum of volume sizes in a thin pool to the total capacity of the pool (default 20)
                    prop_type: range
                    value: (1 - 1000)
                CONTROLLER:
                  Autoplacer/Weights/MinReservedSpace:
                    info: Weight of 'MinReservedSpace' autoplacer-strategy
                    prop_type: regex
                    value: "^[0-9]+([.][0-9]+)?"
                    dflt: "0.0"
  /v1/controller/config:
    get:
      tags:
      - developers
      summary: show controller config
      description: |
        Show Controller config
      operationId: ControllerConfig
      responses:
        "200":
          description: Controller config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControllerConfig'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
    put:
      tags:
      - developers
      summary: modify controller config
      operationId: CtrlSetConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControllerConfig'
      responses:
        "200":
          description: Response on whether the operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "401":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/controller/backup/db:
    post:
      tags:
      - developers
      summary: create a database backup
      description: create a h2 database backup. Currently only H2(embedded) db is working.
      operationId: controllerBackupDB
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseBackupRequest'
      responses:
        "201":
          description: database backup created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/controller/version:
    get:
      tags:
      - developers
      summary: show controller version info
      description: |
        Show Controller version info
      operationId: controllerVersion
      responses:
        "200":
          description: Controller version info object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControllerVersion'
  /v1/resource-definitions/{resource}/drbd-proxy:
    put:
      tags:
      - developers
      summary: modify drbd proxy option properties
      description: |
        Sets or modifies properties

        Possible properties are:
        - `DrbdOptions/Proxy/memlimit` - range[`16777216-9223372036854775807`]
        - `DrbdOptions/Proxy/read-loops` - range[`0-2147483647`]
        - `DrbdOptions/Proxy/sndbuf-size` - range[`0-10485760`]
        - `DrbdOptions/Proxy/rcvbuf-size` - range[`0-10485760`]
        - `DrbdOptions/Proxy/ping-timeout` - range[`1-300`]
        - `DrbdOptions/ProxyCompression/dict-size` - range[`4096-1610612736`]
        - `DrbdOptions/ProxyCompression/lc` - range[`0-4`]
        - `DrbdOptions/ProxyCompression/lp` - range[`0-4`]
        - `DrbdOptions/ProxyCompression/pb` - range[`0-4`]
        - `DrbdOptions/ProxyCompression/nice-len` - range[`0-273`]
        - `DrbdOptions/ProxyCompression/mf` - enum
            * hc4
            * hc3
            * bt2
            * bt3
            * bt4

        - `DrbdOptions/ProxyCompression/mode` - enum
            * fast
            * normal

        - `DrbdOptions/ProxyCompression/depth` - range[`0-1000`]
        - `DrbdOptions/ProxyCompression/level` - range[`1-9`]
        - `DrbdOptions/ProxyCompression/contexts` - range[`1-253`]
        - `DrbdOptions/ProxyCompression/fallback-to-zlib` - enum
            * off
            * on

        - `DrbdOptions/ProxyCompression/numa-threshold` - range[`0-253`]
        - `DrbdOptions/ProxyCompression/level` - range[`1-9`]
        - `DrbdOptions/ProxyCompression/level` - range[`1-22`]
      operationId: resourceDrbdProxyModify
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DrbdProxyModify'
            example:
              override_props:
                compression_type: lz4
      responses:
        "200":
          description: drbd proxy properties modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/drbd-proxy/properties/info:
    get:
      tags:
      - developers
      summary: List all drbd-proxy properties
      description: |
        List all properties, including their names and descriptions, that can
        be set for DRBD proxy on a given resource definition.
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: |
            A structure that maps the DBRD proxy configuration sections to their properties.
            The key is the DRBD proxy configuration section The value is a map where the
            key is the property name and the value is a PropsInfo object describing the
            property.\
            The following DRBD proxy configuration sections exist:
            - DRBD_PROXY
            - DRBD_PROXY_LZMA
            - DRBD_PROXY_LZ4
            - DRBD_PROXY_ZLIB
            - DRBD_PROXY_ZSTD
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/PropsInfo'
              example:
                DRBD_PROXY:
                  DrbdOptions/Proxy/ping-timeout:
                    prop_type: range
                    value: (1 - 300)
                    dflt: "200"
                    unit: 1/10 seconds
                DRBD_PROXY_LZ4: {}
                DRBD_PROXY_LZMA:
                  DrbdOptions/ProxyCompression/lp:
                    prop_type: range
                    value: (0 - 4)
                    dflt: "0"
  /v1/resource-definitions/{resource}/drbd-proxy/enable/{node_a}/{node_b}:
    post:
      tags:
      - developers
      summary: enable a drbd proxy on a node connection
      description: Enables a drbd proxy on a node connection
      operationId: resourceDrbdProxyEnable
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node_a
        in: path
        description: source node of the connection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node_b
        in: path
        description: target node of the connection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DrbdProxyEnable'
      responses:
        "200":
          description: drbd proxy configuration enabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/drbd-proxy/disable/{node_a}/{node_b}:
    post:
      tags:
      - developers
      summary: disables a drbd proxy on a node connection
      description: Disables a drbd proxy on a node connection
      operationId: resourceDrbdProxyDisable
      parameters:
      - name: resource
        in: path
        description: resource to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node_a
        in: path
        description: source node of the connection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node_b
        in: path
        description: target node of the connection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: drbd proxy configuration disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/encryption/passphrase:
    put:
      tags:
      - developers
      summary: modifies the encryption passphrase
      operationId: encryptionPassphraseModify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassPhraseCreate'
      responses:
        "200":
          description: encryption passphrase modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
    post:
      tags:
      - developers
      summary: create a encryption passphrase
      operationId: encryptionPassphraseCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassPhraseCreate'
      responses:
        "200":
          description: encryption passphrase created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
    patch:
      tags:
      - developers
      summary: enter the encryption passphrase
      operationId: encryptionPassphraseEnter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassPhraseEnter'
      responses:
        "200":
          description: encryption passphrase accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/error-reports:
    get:
      tags:
      - developers
      summary: list all error reports
      description: List all error reports
      operationId: errorReportList
      parameters:
      - name: node
        in: query
        description: Only show error reports of this node
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: since
        in: query
        description: Unix epoch milliseconds
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: to
        in: query
        description: Unix timestamp to the ending interval
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: withContent
        in: query
        description: Include error report text in response.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: offset
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: list of error reports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorReport'
        "404":
          description: Query parameter invalid.
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
    patch:
      tags:
      - developers
      summary: Deletes a range of error-reports
      description: Deletes a range of error-reports
      operationId: errorReportDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorReportDelete'
      responses:
        "200":
          description: error-reports deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/stats/error-reports:
    get:
      tags:
      - developers
      summary: Return stats of all error-reports.
      description: |
        Returns a error report stats object.
      operationId: errorReportStats
      responses:
        "200":
          description: Object stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReportStats'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/error-reports/{reportid}:
    get:
      tags:
      - developers
      summary: query the specified reportid
      description: Query the specified reportid
      operationId: errorReportShow
      parameters:
      - name: reportid
        in: path
        description: Error id to select
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node
        in: query
        description: Only show error reports of this node
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: since
        in: query
        description: Unix epoch milliseconds
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: to
        in: query
        description: Unix timestamp to the ending interval
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: withContent
        in: query
        description: Include error report text in response.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: offset
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: list of error reports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorReport'
        "404":
          description: Query parameter invalid.
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
    delete:
      tags:
      - developers
      summary: Deletes a single error-report
      description: Deletes a single error-report
      operationId: errorReportDeleteSingle
      parameters:
      - name: reportid
        in: path
        description: Error id to select
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: error-report deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/key-value-store:
    get:
      tags:
      - developers
      summary: list all key value stores
      description: List all known key value store instances
      operationId: keyValueStoresList
      responses:
        "200":
          description: list of key value stores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KeyValueStore'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/key-value-store/{instance}:
    get:
      tags:
      - developers
      summary: list all key value stores
      description: List all known key value store instances
      operationId: keyValueStoreList
      parameters:
      - name: instance
        in: path
        description: name of the key value store
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: list of key value stores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KeyValueStore'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
    put:
      tags:
      - developers
      summary: modify a key value store
      description: Modify a key value store
      operationId: keyValueStoreModify
      parameters:
      - name: instance
        in: path
        description: name of the key value store
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyValueStoreModify'
      responses:
        "200":
          description: key value store modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
    delete:
      tags:
      - developers
      summary: delete a key value store
      description: Delete a key value store
      operationId: keyValueStoreDelete
      parameters:
      - name: instance
        in: path
        description: name of the key value store
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: key value store deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/query-max-volume-size:
    options:
      tags:
      - developers
      summary: query the maximum volume size
      description: Query the maximum possible volume size storage pools
      operationId: queryMaxVolumeSize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoSelectFilter'
      responses:
        "200":
          description: list of usable storage pools
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxVolumeSizes'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/view/resources:
    get:
      tags:
      - developers
      summary: query all resources with their volumes
      description: This REST-resource should be used if you want to get an overview of all resources with their volumes.
      operationId: viewResources
      parameters:
      - name: nodes
        in: query
        description: "Filter only for the specified nodes, if not specified, no filtering."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: resources
        in: query
        description: "Filter only for the specified resources, if not specified, no filtering."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: storage_pools
        in: query
        description: "Filter only for the specified storage pools, if not specified no filtering."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: props
        in: query
        description: "filter by given properties, full property path"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: resources list with volume data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceWithVolumes'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/view/storage-pools:
    get:
      tags:
      - developers
      summary: query all storage pools
      description: This REST-resource should be used if you want to get an overview of all storage pools.
      operationId: viewStoragePools
      parameters:
      - name: nodes
        in: query
        description: "Filter only for the specified nodes, if not specified, no filtering."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: storage_pools
        in: query
        description: "Filter only for the specified storage pools, if not specified no filtering."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: props
        in: query
        description: "filter by given properties, full property path"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      - name: cached
        in: query
        description: query data from cache if available
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: storage pool list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoragePool'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/view/snapshots:
    get:
      tags:
      - developers
      summary: query all snapshots known to linstor
      description: This REST-resource should be used if you want to get an overview of all snapshots.
      operationId: viewSnapshots
      parameters:
      - name: nodes
        in: query
        description: "Filter only for the specified nodes, if not specified, no filtering."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: resources
        in: query
        description: "Filter only for the specified resources, if not specified, no filtering."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: offset
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: snapshot list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Snapshot'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/view/snapshot-shippings:
    get:
      tags:
      - developers
      summary: view current snapshot shippings
      operationId: viewSnapshotShippings
      parameters:
      - name: nodes
        in: query
        description: "Filter only for the specified nodes, if not specified, no filtering."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: resources
        in: query
        description: "Filter only for the specified resources, if not specified, no filtering."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: snapshots
        in: query
        description: "Filter only for the specified snapshots, if not specified, no filtering."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: status
        in: query
        description: "Filter only for the specified status, if not specified, no filtering."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - running
            - complete
      - name: offset
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: physical storage list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SnapshotShippingStatus'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/view/schedules-by-resource:
    get:
      tags:
      - developers
      summary: list rscDfn-schedule-remote-triples
      description: list all schedule-remote-rscDfn-triples
      parameters:
      - name: rsc
        in: query
        description: filter by rsc-name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: remote
        in: query
        description: filter by remote-name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: schedule
        in: query
        description: filter by schedule-name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: active-only
        in: query
        description: only list active schedules
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: list of triples
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledRscsList'
  /v1/schedules-by-resource/{rscName}:
    get:
      tags:
      - developers
      summary: list schedule-details
      description: list the details of all schedules set on a specific rscDfn
      parameters:
      - name: rscName
        in: path
        description: the rscDfn you want to see the schedule-details from
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: list of schedule-details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleDetailsList'
  /v1/stats/resources:
    get:
      tags:
      - developers
      summary: Return stats of all resources.
      description: |
        Returns a resource stats object.
      operationId: resourcesStats
      responses:
        "200":
          description: Object stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceStats'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/stats/storage-pools:
    get:
      tags:
      - developers
      summary: Return stats of all storage pools.
      description: |
        Returns a storage pool stats object.
      operationId: storagePoolsStats
      responses:
        "200":
          description: Object stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoragePoolStats'
        "400":
          description: "invalid input, or request failed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/physical-storage:
    get:
      tags:
      - developers
      summary: "show physical storage on nodes, to be used with LINSTOR"
      description: Gives a grouped list of physical storage that can be turned into a LINSTOR storage-pool
      operationId: viewPhysicaStorage
      parameters:
      - name: offset
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: physical storage list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PhysicalStorage'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/physical-storage/{node}:
    get:
      tags:
      - developers
      summary: show physical storage on a single node
      description: |
        Gives a complete list of physical storage that can be turned into a LINSTOR storage-pool.
      operationId: getPhysicalStorage
      parameters:
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: physical storage list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PhysicalStorageNode'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
    post:
      tags:
      - developers
      summary: "creates an LVM, LVM-thin or ZFS pool, optional VDO under it"
      description: |
        Creates a LVM/LVM-thin, ZFS pool on the given device and if supported VDO(optional) under it.
        logcal_size_kib parameter is only needed if LVM-thin or vdo is used.
        Also note VDO can only used with LVM-fat.
      operationId: createDevicePool
      parameters:
      - name: node
        in: path
        description: node to use
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhysicalStorageCreate'
            example:
              provider_kind: LVM_THIN
              device_path: /dev/sde
              pool_name: ssd_fast
              logcal_size_kib: 5368709120
              vdo_enable: false
      responses:
        "201":
          description: device pool created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/sos-report:
    get:
      tags:
      - developers
      summary: creates a SOS report in the log directory of the controller
      operationId: createSOSReport
      parameters:
      - name: nodes
        in: query
        description: nodes to use
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: rscs
        in: query
        description: use nodes where any given rsc is deployed
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: do not use the given nodes
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: include-ctrl
        in: query
        description: include logs from ctrl
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: since
        in: query
        description: Unix epoch milliseconds
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "201":
          description: SOS report created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/sos-report/download:
    get:
      tags:
      - developers
      summary: request sos report to download
      operationId: downloadSOSReport
      parameters:
      - name: nodes
        in: query
        description: nodes to use
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: rscs
        in: query
        description: use nodes where any given rsc is deployed
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: do not use the given nodes
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: include-ctrl
        in: query
        description: include logs from ctrl
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: since
        in: query
        description: Unix epoch milliseconds
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: SOS report ready to download as binary octet stream .tar.gz
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/remotes/{remote_name}/backups:
    get:
      tags:
      - developers
      summary: list all backups
      description: list all backups in a single bucket
      parameters:
      - name: remote_name
        in: path
        description: The remote to list the backups from
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: rsc_name
        in: query
        description: Only show backups of this resource
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: snap_name
        in: query
        description: Only show backups with this snapshot name
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: list of backups
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupList'
    post:
      tags:
      - developers
      summary: create a full or incremental backup
      description: create and ship a full backup to the target system
      parameters:
      - name: remote_name
        in: path
        description: The remote to ship the backups to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupCreate'
      responses:
        "200":
          description: backup created and shipping started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
    delete:
      tags:
      - developers
      summary: delete backups
      description: delete the specified backups
      parameters:
      - name: remote_name
        in: path
        description: The remote to delete the backups from
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: query
        description: ID of the specific backup to be deleted
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: id_prefix
        in: query
        description: ID prefix of possibly multiple backups to be deleted
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: cascading
        in: query
        description: deletes the specified backup(s) and all backups depending on it
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: timestamp
        in: query
        description: deletes all backups that were made before the given timestamp
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: resource_name
        in: query
        description: deletes all backups made from the specified resource
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: node_name
        in: query
        description: deletes all backups made from the specified node
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: all_local_cluster
        in: query
        description: deletes all backups made from the current cluster
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: all
        in: query
        description: deletes ALL backups
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: s3key
        in: query
        description: deletes the backup associated with the s3key if it fits the naming-criteria
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: s3key_force
        in: query
        description: deletes the s3key - regardless of whether it is a backup or not
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: dryrun
        in: query
        description: does not delete anything but returns an ApiCallRc with all entries that would be deleted
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: keep_snaps
        in: query
        description: makes sure the snapshots the backups originated from are not deleted
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: backups deleted or error messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/remotes/{remote_name}/backups/restore:
    post:
      tags:
      - developers
      summary: restore backups
      description: restore the specified backups
      parameters:
      - name: remote_name
        in: path
        description: The remote to restore the backup from
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRestore'
      responses:
        "200":
          description: backup restore started or error messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/remotes/{remote_name}/backups/abort:
    post:
      tags:
      - developers
      summary: abort backups
      description: abort all backups of the given resource
      parameters:
      - name: remote_name
        in: path
        description: The remote to abort the backups from
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupAbort'
      responses:
        "200":
          description: backups aborted or error messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/remotes/{remote_name}/backups/ship:
    post:
      tags:
      - developers
      summary: ships a backup from one Linstor cluster to another
      description: ships a backup from one Linstor cluster to another
      parameters:
      - name: remote_name
        in: path
        description: The remote to ship the backup to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupShip'
      responses:
        "200":
          description: shippment has started or error messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/remotes/{remote_name}/backups/info:
    post:
      tags:
      - developers
      summary: list info about a backup
      description: get info about the storpools a backup uses and the size it needs
      parameters:
      - name: remote_name
        in: path
        description: The remote to get the info from
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupInfoRequest'
      responses:
        "200":
          description: successfully get the info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupInfo'
  /v1/remotes/{remote_name}/backups/schedule/{schedule_name}/enable:
    put:
      tags:
      - developers
      summary: enable backup schedule
      description: enable backups to be scheduled to a specific remote
      parameters:
      - name: remote_name
        in: path
        description: The remote to ship the backup to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: schedule_name
        in: path
        description: the schedule with which the backup should be shipped
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupSchedule'
      responses:
        "200":
          description: backup schedule enabled sucessfully or error messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/remotes/{remote_name}/backups/schedule/{schedule_name}/disable:
    put:
      tags:
      - developers
      summary: disable backup schedule
      description: disable backups to be scheduled to a specific remote
      parameters:
      - name: remote_name
        in: path
        description: The remote to ship the backup to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: schedule_name
        in: path
        description: the schedule with which the backup is being shipped
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupSchedule'
      responses:
        "200":
          description: backup schedule disabled sucessfully or error messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/remotes/{remote_name}/backups/schedule/{schedule_name}/delete:
    delete:
      tags:
      - developers
      summary: delete backup schedule
      description: delete backups to be scheduled to a specific remote
      parameters:
      - name: remote_name
        in: path
        description: The remote to ship the backup to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: schedule_name
        in: path
        description: the schedule with which the backup is being shipped
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: rsc_dfn_name
        in: query
        description: the resource definition the schedule is assigned to
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: rsc_grp_name
        in: query
        description: the resource group the schedule is assigned to
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: backup schedule deleted sucessfully or error messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/events/drbd/promotion:
    get:
      tags:
      - developers
      summary: drbd promotion event changes
      description: Notifies clients about changes in may_promote of resources
      responses:
        "200":
          description: drbd promotion event stream
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/inline_response_200'
  /v1/events/nodes:
    get:
      tags:
      - developers
      summary: server sent event stream for nodes
      description: Notifies clients about changes with nodes
      responses:
        "200":
          description: linstor node events
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
  /v1/vendor/seagate/exos/defaults:
    get:
      tags:
      - developers
      summary: Lists default setting for all EXOS enclosures
      description: Lists default setting for all EXOS enclosures
      responses:
        "200":
          description: List of default settings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExosDefaults'
    put:
      tags:
      - developers
      summary: modify default settings of EXOS configurations
      description: |
        Sets or modifies default username / password for EXOS enclosures
      operationId: exosModifyDefault
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExosDefaultsModify'
      responses:
        "200":
          description: default configuration modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/vendor/seagate/exos/enclosures:
    get:
      tags:
      - developers
      summary: List of EXOS enclosures
      description: Lists EXOS enclosures including controller IP and health status
      parameters:
      - name: nocache
        in: query
        description: Force recaching before response
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: List of EXOS enclosures
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExosEnclosureHealth'
    post:
      tags:
      - developers
      summary: creates a new enclosure
      description: Creates a new enclosure unless it already exists
      operationId: exosCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExosEnclosure'
      responses:
        "200":
          description: Enclosure successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/vendor/seagate/exos/enclosures/{enclosure}:
    put:
      tags:
      - developers
      summary: modifies an existing enclosure
      description: Modifies an existing enclosure
      operationId: exosModify
      parameters:
      - name: enclosure
        in: path
        description: Name of the enclosure
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExosEnclosure'
      responses:
        "200":
          description: Enclosure successfully modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
    delete:
      tags:
      - developers
      summary: modifies an existing enclosure
      description: Deletes an existing enclosure
      operationId: exosDelete
      parameters:
      - name: enclosure
        in: path
        description: Name of the enclosure
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Enclosure successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/vendor/seagate/exos/{enclosure}/events:
    get:
      tags:
      - developers
      summary: Returns the last EXOS events
      description: Lists the most current X events
      operationId: exosDescribe
      parameters:
      - name: enclosure
        in: path
        description: Name of the enclosure
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Number of events to fetch
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: List of EXOS events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExosEnclosureEvent'
  /v1/vendor/seagate/exos/map:
    get:
      tags:
      - developers
      summary: Lists all EXOS Ports connected to each Linstor Node
      description: Lists the connection-mesh of EXOS Ports to Linstor Nodes
      operationId: exosMap
      responses:
        "200":
          description: List of EXOS events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExosConnectionMap'
  /v1/remotes:
    get:
      tags:
      - developers
      summary: list all remotes
      description: list of all known remotes on this cluster
      responses:
        "200":
          description: list of remotes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteList'
    delete:
      tags:
      - developers
      summary: delete a remote
      description: delete the given remote
      parameters:
      - name: remote_name
        in: query
        description: name of the remote
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: remote successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/remotes/s3/{remoteName}:
    put:
      tags:
      - developers
      summary: modify a s3 remote
      description: modify an existing s3 remote
      parameters:
      - name: remoteName
        in: path
        description: name of the remote
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3Remote'
      responses:
        "200":
          description: s3 remote modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/remotes/s3:
    get:
      tags:
      - developers
      summary: list all s3 remotes
      description: list of all known s3 remotes on this cluster
      responses:
        "200":
          description: list of s3 remotes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/S3Remote'
    post:
      tags:
      - developers
      summary: creates a new s3 remote
      description: Creates a new s3 remote unless it already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3Remote'
      responses:
        "200":
          description: s3 remote successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/remotes/linstor:
    get:
      tags:
      - developers
      summary: list all linstor remotes
      description: list of all known linstor remotes on this cluster
      responses:
        "200":
          description: list of linstor remotes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LinstorRemote'
    post:
      tags:
      - developers
      summary: creates a new linstor remote
      description: Creates a new linstor remote unless it already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinstorRemote'
      responses:
        "200":
          description: linstor remote successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/remotes/linstor/{remoteName}:
    put:
      tags:
      - developers
      summary: modify a linstor remote
      description: modify an existing linstor remote
      parameters:
      - name: remoteName
        in: path
        description: name of the remote
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinstorRemote'
      responses:
        "200":
          description: linstor remote modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/remotes/ebs:
    get:
      tags:
      - developers
      summary: list all EBS remotes
      description: list of all known EBS remotes on this cluster
      responses:
        "200":
          description: list of EBS remotes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EbsRemote'
    post:
      tags:
      - developers
      summary: creates a new EBS remote
      description: Creates a new EBS remote unless it already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EbsRemote'
      responses:
        "200":
          description: EBS remote successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/remotes/ebs/{remoteName}:
    put:
      tags:
      - developers
      summary: modify a EBS remote
      description: modify an existing EBS remote
      parameters:
      - name: remoteName
        in: path
        description: name of the remote
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EbsRemote'
      responses:
        "200":
          description: EBS remote modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/schedules:
    get:
      tags:
      - developers
      summary: list all schedules
      description: list of all known schedules on this cluster
      responses:
        "200":
          description: list of schedules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleList'
    post:
      tags:
      - developers
      summary: creates a new schedule
      description: Creates a new schedule unless it already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        "200":
          description: schedule successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/schedules/{scheduleName}:
    put:
      tags:
      - developers
      summary: modify a schedule
      description: modify an existing schedule
      parameters:
      - name: scheduleName
        in: path
        description: name of the schedule
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleModify'
      responses:
        "200":
          description: schedule modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
    delete:
      tags:
      - developers
      summary: delete a schedule
      description: delete the given schedule
      parameters:
      - name: scheduleName
        in: path
        description: name of the schedule
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: schedule successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/files:
    get:
      tags:
      - developers
      summary: list registered external files
      description: |
        Get a list of previously registered external files.
        File contents are not included, unless the "content" query parameter
        is explicitly set to true.
      parameters:
      - name: content
        in: query
        description: "Include file content in response. If not given, defaults to false."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: List of registered external files
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExternalFile'
  /v1/files/{extFileName}:
    get:
      tags:
      - developers
      summary: shows the requested external file including its content
      description: Shows the requested external file including its content
      parameters:
      - name: extFileName
        in: path
        description: Name of an external file. Must be an absolute path in URL-encoding
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: '%2Fetc%2Fsome.conf'
      responses:
        "200":
          description: shows the requested external file including its content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalFile'
    put:
      tags:
      - developers
      summary: register or modify a previously registered external file
      description: Register or modify a previously registered external file
      parameters:
      - name: extFileName
        in: path
        description: Name of an external file. Must be an absolute path in URL-encoding
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: '%2Fetc%2Fsome.conf'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalFile'
      responses:
        "200":
          description: external file registered or modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
    delete:
      tags:
      - developers
      summary: delete the given external file
      description: |
        Deletes the given external file. This effectively also deletes the file
        on all satellites
      parameters:
      - name: extFileName
        in: path
        description: Name of an external file. Must be an absolute path in URL-encoding
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: '%2Fetc%2Fsome.conf'
      responses:
        "200":
          description: File successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRcList'
  /v1/queries/resource-groups/query-all-size-info:
    post:
      tags:
      - developers
      summary: Queries size information from all available resource groups
      description: |
        Unlike /v1/resource-groups/{resource_group}/query-size-info, this API
        returns the QSI result for all currently available resource groups
      operationId: QryAllSizeInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryAllSizeInfoRequest'
      responses:
        "200":
          description: map of QSI result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryAllSizeInfoResponse'
        "500":
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
components:
  schemas:
    ApiCallRc:
      required:
      - message
      - ret_code
      type: object
      properties:
        ret_code:
          type: integer
          description: A masked error number
          format: int64
        message:
          type: string
          example: Operation result.
        cause:
          type: string
          description: Cause of the error
        details:
          type: string
          description: Details to the error message
        correction:
          type: string
          description: Possible correction options
        error_report_ids:
          type: array
          description: List of error report ids related to this api call return code.
          items:
            type: string
        obj_refs:
          type: object
          additionalProperties:
            type: string
          description: Map of objection that have been involved by the operation.
      description: Common api reply structure
    ApiCallRcList:
      type: array
      items:
        $ref: '#/components/schemas/ApiCallRc'
    Node:
      required:
      - name
      - type
      type: object
      properties:
        name:
          type: string
          example: nodeA
        type:
          type: string
          example: Satellite
          enum:
          - Controller
          - Satellite
          - Combined
          - Auxiliary
          - Openflex_Target
        flags:
          type: array
          items:
            type: string
        props:
          $ref: '#/components/schemas/Properties'
        net_interfaces:
          type: array
          items:
            $ref: '#/components/schemas/NetInterface'
        connection_status:
          type: string
          description: |
            Enum describing the current connection status.
          example: ONLINE
          enum:
          - OFFLINE
          - CONNECTED
          - ONLINE
          - VERSION_MISMATCH
          - FULL_SYNC_FAILED
          - AUTHENTICATION_ERROR
          - UNKNOWN
          - HOSTNAME_MISMATCH
          - OTHER_CONTROLLER
          - AUTHENTICATED
          - NO_STLT_CONN
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
        storage_providers:
          type: array
          items:
            $ref: '#/components/schemas/ProviderKind'
        resource_layers:
          type: array
          items:
            $ref: '#/components/schemas/LayerType'
        unsupported_providers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        unsupported_layers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        eviction_timestamp:
          type: integer
          description: milliseconds since unix epoch in UTC
          format: int64
    NodeCreateEbs:
      required:
      - ebs_remote_name
      - name
      type: object
      properties:
        name:
          type: string
          example: nodeA
        ebs_remote_name:
          type: string
          example: EbsRemote
    NodeModify:
      type: object
      properties:
        node_type:
          type: string
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
    NodeRestore:
      type: object
      properties:
        delete_resources:
          type: boolean
        delete_snapshots:
          type: boolean
    NetInterface:
      required:
      - address
      - name
      type: object
      properties:
        name:
          type: string
          example: default
        address:
          type: string
          example: 10.0.0.2
        satellite_port:
          type: integer
          example: 3366
        satellite_encryption_type:
          type: string
          example: PLAIN
          enum:
          - PLAIN
          - SSL
        is_active:
          type: boolean
          description: Defines if this netinterface should be used for the satellite connection
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
    Properties:
      type: object
      additionalProperties:
        type: string
      description: A string to string property map.
    ProviderKind:
      type: string
      enum:
      - DISKLESS
      - LVM
      - LVM_THIN
      - ZFS
      - ZFS_THIN
      - OPENFLEX_TARGET
      - FILE
      - FILE_THIN
      - SPDK
      - EBS_TARGET
      - EBS_INIT
    StoragePool:
      required:
      - provider_kind
      - storage_pool_name
      type: object
      properties:
        storage_pool_name:
          type: string
          example: DfltStorPool
        node_name:
          type: string
        provider_kind:
          $ref: '#/components/schemas/ProviderKind'
        props:
          $ref: '#/components/schemas/Properties'
        static_traits:
          type: object
          additionalProperties:
            type: string
          description: read only map of static storage pool traits
          readOnly: true
        free_capacity:
          type: integer
          description: Kibi - read only
          format: int64
          example: 882894848
        total_capacity:
          type: integer
          description: Kibi - read only
          format: int64
          example: 1056964608
        free_space_mgr_name:
          type: string
          description: read only
          example: drbd1:myfastpool
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
        reports:
          type: array
          description: Currently known report messages for this storage pool
          readOnly: true
          items:
            $ref: '#/components/schemas/ApiCallRc'
        supports_snapshots:
          type: boolean
          description: true if the storage pool supports snapshots. false otherwise
        shared_space:
          type: string
          description: Name of the shared space or null if none given
        external_locking:
          type: boolean
          description: "true if a shared storage pool uses linstor-external locking, like cLVM"
          default: false
      description: |
        Contains information about a storage pool.

        If state is `Error` check the storage pool object path for detailed error description:

          /v1/nodes/{nodename}/storage-pools/{poolname}
    LayerType:
      type: string
      enum:
      - DRBD
      - LUKS
      - STORAGE
      - NVME
      - WRITECACHE
      - CACHE
      - BCACHE
      - OPENFLEX
    DrbdResourceDefinitionLayer:
      type: object
      properties:
        resource_name_suffix:
          type: string
        peer_slots:
          type: integer
          format: int32
        al_stripes:
          type: integer
          format: int32
        al_stripe_size_kib:
          type: integer
          format: int64
        port:
          type: integer
          description: used drbd port for this resource
          format: int32
          example: 7000
        transport_type:
          type: string
        secret:
          type: string
          description: drbd resource secret
          example: 7sqCWjvGmwAiV5kzg3VF
        down:
          type: boolean
    OpenflexResourceDefinitionLayer:
      type: object
      properties:
        resource_name_suffix:
          type: string
        nqn:
          type: string
    ResourceDefinitionLayer:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/LayerType'
        data:
          oneOf:
          - $ref: '#/components/schemas/DrbdResourceDefinitionLayer'
          - $ref: '#/components/schemas/OpenflexResourceDefinitionLayer'
    ResourceDefinition:
      type: object
      properties:
        name:
          type: string
          example: rsc1
          default: ""
        external_name:
          $ref: '#/components/schemas/ExternalName'
        props:
          $ref: '#/components/schemas/Properties'
        flags:
          type: array
          items:
            type: string
        layer_data:
          type: array
          items:
            $ref: '#/components/schemas/ResourceDefinitionLayer'
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
        resource_group_name:
          type: string
          description: "name of the linked resource group, if there is a link"
        volume_definitions:
          type: array
          items:
            $ref: '#/components/schemas/VolumeDefinition'
    ResourceDefinitionCreate:
      required:
      - resource_definition
      type: object
      properties:
        drbd_port:
          type: integer
          description: drbd port for resources
          format: int32
        drbd_secret:
          type: string
          description: drbd resource secret
          example: 7sqCWjvGmwAiV5kzg3VF
        drbd_peer_slots:
          type: integer
          description: drbd peer slot number
          format: int32
        drbd_transport_type:
          type: string
          example: IP
        resource_definition:
          $ref: '#/components/schemas/ResourceDefinition'
    ResourceDefinitionModify:
      type: object
      properties:
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
        drbd_port:
          type: integer
          description: drbd port for resources
          format: int32
        drbd_peer_slots:
          type: integer
          description: drbd peer slot number
          format: int32
        layer_stack:
          type: array
          items:
            $ref: '#/components/schemas/LayerType'
        resource_group:
          type: string
          description: change resource group to the given group name
    DrbdVolumeDefinition:
      type: object
      properties:
        resource_name_suffix:
          type: string
        volume_number:
          type: integer
          format: int32
        minor_number:
          type: integer
          format: int32
    VolumeDefinitionLayer:
      required:
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/LayerType'
        data:
          oneOf:
          - $ref: '#/components/schemas/DrbdVolumeDefinition'
    VolumeDefinition:
      required:
      - size_kib
      type: object
      properties:
        volume_number:
          type: integer
          format: int32
        size_kib:
          type: integer
          description: Size of the volume in Kibi.
          format: int64
        props:
          $ref: '#/components/schemas/Properties'
        flags:
          type: array
          items:
            type: string
        layer_data:
          type: array
          items:
            $ref: '#/components/schemas/VolumeDefinitionLayer'
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
    VolumeDefinitionCreate:
      required:
      - volume_definition
      type: object
      properties:
        volume_definition:
          $ref: '#/components/schemas/VolumeDefinition'
        drbd_minor_number:
          type: integer
          format: int32
    VolumeDefinitionModify:
      type: object
      properties:
        size_kib:
          type: integer
          format: int64
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
        flags:
          type: array
          description: |
            To add a flag just specify the flag name, to remove a flag prepend it with a '-'.

            Flags:
              * GROSS_SIZE
          items:
            type: string
    DrbdResource:
      type: object
      properties:
        drbd_resource_definition:
          $ref: '#/components/schemas/DrbdResourceDefinitionLayer'
        node_id:
          type: integer
          format: int32
        peer_slots:
          type: integer
          format: int32
        al_stripes:
          type: integer
          format: int32
        al_size:
          type: integer
          format: int64
        flags:
          type: array
          items:
            type: string
        drbd_volumes:
          type: array
          items:
            $ref: '#/components/schemas/DrbdVolume'
        connections:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DrbdConnection'
        promotion_score:
          type: integer
          format: int32
        may_promote:
          type: boolean
    StorageResource:
      type: object
      properties:
        storage_volumes:
          type: array
          items:
            $ref: '#/components/schemas/StorageVolume'
    LUKSResource:
      type: object
      properties:
        luks_volumes:
          type: array
          items:
            $ref: '#/components/schemas/LUKSVolume'
    NVMEResource:
      type: object
      properties:
        nvme_volumes:
          type: array
          items:
            $ref: '#/components/schemas/NVMEVolume'
    OpenflexResource:
      type: object
      properties:
        openflex_resource_definition:
          $ref: '#/components/schemas/OpenflexResourceDefinitionLayer'
        openflex_volumes:
          type: array
          items:
            $ref: '#/components/schemas/OpenflexVolume'
    WritecacheResource:
      type: object
      properties:
        writecache_volumes:
          type: array
          items:
            $ref: '#/components/schemas/WritecacheVolume'
    CacheResource:
      type: object
      properties:
        cache_volumes:
          type: array
          items:
            $ref: '#/components/schemas/CacheVolume'
    BCacheResource:
      type: object
      properties:
        bcache_volumes:
          type: array
          items:
            $ref: '#/components/schemas/BCacheVolume'
    ResourceLayer:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: '#/components/schemas/ResourceLayer'
        resource_name_suffix:
          type: string
        type:
          $ref: '#/components/schemas/LayerType'
        drbd:
          $ref: '#/components/schemas/DrbdResource'
        luks:
          $ref: '#/components/schemas/LUKSResource'
        storage:
          $ref: '#/components/schemas/StorageResource'
        nvme:
          $ref: '#/components/schemas/NVMEResource'
        openflex:
          $ref: '#/components/schemas/OpenflexResource'
        writecache:
          $ref: '#/components/schemas/WritecacheResource'
        cache:
          $ref: '#/components/schemas/CacheResource'
        bcache:
          $ref: '#/components/schemas/BCacheResource'
    ResourceState:
      type: object
      properties:
        in_use:
          type: boolean
    DrbdConnection:
      type: object
      properties:
        connected:
          type: boolean
        message:
          type: string
          description: DRBD connection status
          example: Connected
          enum:
          - StandAlone
          - Disconnecting
          - Unconnected
          - Timeout
          - BrokenPipe
          - NetworkFailure
          - ProtocolError
          - Connecting
          - TearDown
          - Connected
          - Unknown
    Resource:
      type: object
      properties:
        name:
          type: string
          example: rsc1
        node_name:
          type: string
          example: nodeA
        props:
          $ref: '#/components/schemas/Properties'
        flags:
          type: array
          items:
            type: string
        layer_object:
          $ref: '#/components/schemas/ResourceLayer'
        state:
          $ref: '#/components/schemas/ResourceState'
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
        create_timestamp:
          type: integer
          description: milliseconds since unix epoch in UTC
          format: int64
    ResourceWithVolumes:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - type: object
        properties:
          volumes:
            type: array
            items:
              $ref: '#/components/schemas/Volume'
          shared_name:
            type: string
            description: |
              shared space name of the data storage pool of the first volume of
              the resource or empty if data storage pool is not shared
    ResourceCreate:
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/Resource'
        layer_list:
          type: array
          items:
            $ref: '#/components/schemas/LayerType'
        drbd_node_id:
          type: integer
          format: int32
    ResourceMakeAvailable:
      type: object
      properties:
        layer_list:
          type: array
          items:
            $ref: '#/components/schemas/LayerType'
        diskful:
          type: boolean
          description: if true resource will be created as diskful even if diskless would be possible
          default: false
    ResourceModify:
      type: object
      properties:
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
    VolumeModify:
      type: object
      properties:
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
    DrbdVolume:
      type: object
      properties:
        drbd_volume_definition:
          $ref: '#/components/schemas/DrbdVolumeDefinition'
        device_path:
          type: string
          description: drbd device path e.g. '/dev/drbd1000'
        backing_device:
          type: string
          description: block device used by drbd
        meta_disk:
          type: string
        allocated_size_kib:
          type: integer
          format: int64
        usable_size_kib:
          type: integer
          format: int64
        disk_state:
          type: string
          description: String describing current volume state
        ext_meta_stor_pool:
          type: string
          description: Storage pool name used for external meta data; null for internal
    LUKSVolume:
      type: object
      properties:
        volume_number:
          type: integer
          format: int32
        device_path:
          type: string
          description: block device path
        backing_device:
          type: string
          description: block device used by luks
        allocated_size_kib:
          type: integer
          format: int64
        usable_size_kib:
          type: integer
          format: int64
        disk_state:
          type: string
          description: String describing current volume state
        opened:
          type: boolean
    StorageVolume:
      type: object
      properties:
        volume_number:
          type: integer
          format: int32
        device_path:
          type: string
          description: block device path
        allocated_size_kib:
          type: integer
          format: int64
        usable_size_kib:
          type: integer
          format: int64
        disk_state:
          type: string
          description: String describing current volume state
    NVMEVolume:
      type: object
      properties:
        volume_number:
          type: integer
          format: int32
        device_path:
          type: string
          description: block device path
        backing_device:
          type: string
          description: block device used by nvme
        allocated_size_kib:
          type: integer
          format: int64
        usable_size_kib:
          type: integer
          format: int64
        disk_state:
          type: string
          description: String describing current volume state
    OpenflexVolume:
      type: object
      properties:
        volume_number:
          type: integer
          format: int32
        device_path:
          type: string
          description: block device path
        allocated_size_kib:
          type: integer
          format: int64
        usable_size_kib:
          type: integer
          format: int64
        disk_state:
          type: string
          description: String describing current volume state
    WritecacheVolume:
      type: object
      properties:
        volume_number:
          type: integer
          format: int32
        device_path:
          type: string
          description: block device path
        device_path_cache:
          type: string
          description: block device path used as cache device
        allocated_size_kib:
          type: integer
          format: int64
        usable_size_kib:
          type: integer
          format: int64
        disk_state:
          type: string
          description: String describing current volume state
    CacheVolume:
      type: object
      properties:
        volume_number:
          type: integer
          format: int32
        device_path:
          type: string
          description: block device path
        device_path_cache:
          type: string
          description: block device path used as cache device
        device_meta_cache:
          type: string
          description: block device path used as meta device
        allocated_size_kib:
          type: integer
          format: int64
        usable_size_kib:
          type: integer
          format: int64
        disk_state:
          type: string
          description: String describing current volume state
    BCacheVolume:
      type: object
      properties:
        volume_number:
          type: integer
          format: int32
        device_path:
          type: string
          description: block device path
        device_path_cache:
          type: string
          description: block device path used as cache device
        allocated_size_kib:
          type: integer
          format: int64
        usable_size_kib:
          type: integer
          format: int64
        disk_state:
          type: string
          description: String describing current volume state
    VolumeLayer:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/LayerType'
        data:
          oneOf:
          - $ref: '#/components/schemas/DrbdVolume'
          - $ref: '#/components/schemas/LUKSVolume'
          - $ref: '#/components/schemas/StorageVolume'
          - $ref: '#/components/schemas/NVMEVolume'
          - $ref: '#/components/schemas/WritecacheVolume'
          - $ref: '#/components/schemas/CacheVolume'
          - $ref: '#/components/schemas/BCacheVolume'
    Volume:
      type: object
      properties:
        volume_number:
          type: integer
          format: int32
        storage_pool_name:
          type: string
        provider_kind:
          $ref: '#/components/schemas/ProviderKind'
        device_path:
          type: string
        allocated_size_kib:
          type: integer
          format: int64
        usable_size_kib:
          type: integer
          format: int64
        props:
          $ref: '#/components/schemas/Properties'
        flags:
          type: array
          items:
            type: string
        state:
          $ref: '#/components/schemas/VolumeState'
        layer_data_list:
          type: array
          items:
            $ref: '#/components/schemas/VolumeLayer'
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
        reports:
          type: array
          items:
            $ref: '#/components/schemas/ApiCallRc'
    VolumeState:
      type: object
      properties:
        disk_state:
          type: string
    ResourceGroup:
      type: object
      properties:
        name:
          type: string
          example: rscgrp1
          default: ""
        description:
          type: string
          default: ""
        props:
          $ref: '#/components/schemas/Properties'
        select_filter:
          $ref: '#/components/schemas/AutoSelectFilter'
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
    ResourceGroupModify:
      type: object
      properties:
        description:
          type: string
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
        select_filter:
          $ref: '#/components/schemas/AutoSelectFilter'
    ResourceGroupSpawn:
      type: object
      properties:
        resource_definition_name:
          type: string
          description: name of the resulting resource-definition
        resource_definition_external_name:
          $ref: '#/components/schemas/ExternalName'
        volume_sizes:
          type: array
          description: sizes (in kib) of the resulting volume-definitions
          items:
            type: integer
            format: int64
        select_filter:
          $ref: '#/components/schemas/AutoSelectFilter'
        partial:
          type: boolean
          description: |
            If false, the length of the vlm_sizes has to match the number of volume-groups or an
            error is returned.

            If true and there are more vlm_sizes than volume-groups, the additional volume-definitions
            will simply have no pre-set properties (i.e. "empty" volume-definitions)
            If true and there are less vlm_sizes than volume-groups, the additional volume-groups
            won't be used.

            If the count of vlm_sizes matches the number of volume-groups, this "partial" parameter
            has no effect.
          default: false
        definitions_only:
          type: boolean
          description: |
            If true, the spawn command will only create the resource-definition with the volume-definitions
            but will not perform an auto-place, even if it is configured.
          default: false
    VolumeGroup:
      type: object
      properties:
        volume_number:
          type: integer
          format: int32
        props:
          $ref: '#/components/schemas/Properties'
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
        flags:
          type: array
          items:
            type: string
    VolumeGroupModify:
      type: object
      properties:
        override_props:
          $ref: '#/components/schemas/Properties'
        flags:
          type: array
          description: |
            To add a flag just specify the flag name, to remove a flag prepend it with a '-'.

            Flags:
              * GROSS_SIZE
          items:
            type: string
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
    ResourceGroupAdjust:
      type: object
      properties:
        select_filter:
          $ref: '#/components/schemas/AutoSelectFilter'
    AutoPlaceRequest:
      required:
      - select_filter
      type: object
      properties:
        diskless_on_remaining:
          type: boolean
          default: false
        select_filter:
          $ref: '#/components/schemas/AutoSelectFilter'
        layer_list:
          type: array
          items:
            $ref: '#/components/schemas/LayerType'
    AutoSelectFilter:
      type: object
      properties:
        place_count:
          type: integer
          format: int32
        additional_place_count:
          type: integer
          format: int32
        node_name_list:
          type: array
          items:
            type: string
        storage_pool:
          type: string
        storage_pool_list:
          type: array
          items:
            type: string
        storage_pool_diskless_list:
          type: array
          items:
            type: string
        not_place_with_rsc:
          type: array
          items:
            type: string
        not_place_with_rsc_regex:
          type: string
        replicas_on_same:
          type: array
          items:
            type: string
        replicas_on_different:
          type: array
          items:
            type: string
        layer_stack:
          type: array
          items:
            type: string
        provider_list:
          type: array
          items:
            type: string
        diskless_on_remaining:
          type: boolean
        diskless_type:
          type: string
        overprovision:
          type: number
          description: Multiplier of thin storage pool's free space
          format: double
    Candidate:
      type: object
      properties:
        storage_pool:
          type: string
          example: DfltStorPool
        max_volume_size_kib:
          type: integer
          description: maximum size in KiB
          format: int64
          example: 3194880
        node_names:
          type: array
          items:
            type: string
        all_thin:
          type: boolean
    MaxVolumeSizes:
      type: object
      properties:
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/Candidate'
        default_max_oversubscription_ratio:
          type: number
          format: double
    QuerySizeInfoRequest:
      type: object
      properties:
        select_filter:
          $ref: '#/components/schemas/AutoSelectFilter'
        ignore_cache_older_than_sec:
          type: integer
          format: int32
          default: -1
    QuerySizeInfoResponse:
      type: object
      properties:
        space_info:
          $ref: '#/components/schemas/QuerySizeInfoResponseSpaceInfo'
        reports:
          type: array
          items:
            $ref: '#/components/schemas/ApiCallRc'
    QueryAllSizeInfoRequest:
      type: object
      properties:
        select_filter:
          $ref: '#/components/schemas/AutoSelectFilter'
        ignore_cache_older_than_sec:
          type: integer
          format: int32
          default: -1
    QueryAllSizeInfoResponse:
      type: object
      properties:
        result:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/QuerySizeInfoResponse'
        reports:
          type: array
          items:
            $ref: '#/components/schemas/ApiCallRc'
    QuerySizeInfoResponseSpaceInfo:
      required:
      - max_vlm_size_in_kib
      type: object
      properties:
        max_vlm_size_in_kib:
          type: integer
          description: maximum size in KiB
          format: int64
          example: 3194880
        available_size_in_kib:
          type: integer
          description: available size of the storage pools in KiB
          format: int64
          example: 319488000
        capacity_in_kib:
          type: integer
          description: capacity of the storage pools in KiB
          format: int64
          example: 319488000
        default_max_oversubscription_ratio:
          type: number
          format: double
        next_spawn_result:
          type: array
          items:
            $ref: '#/components/schemas/QuerySizeInfoSpawnResult'
    QuerySizeInfoSpawnResult:
      required:
      - node_name
      - stor_pool_name
      type: object
      properties:
        node_name:
          type: string
        stor_pool_name:
          type: string
        stor_pool_oversubscription_ratio:
          type: number
          format: double
    ControllerPropsModify:
      type: object
      properties:
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
    ControllerConfig:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/ControllerConfigConfig'
        debug:
          $ref: '#/components/schemas/ControllerConfigDebug'
        log:
          $ref: '#/components/schemas/ControllerConfigLog'
        db:
          $ref: '#/components/schemas/ControllerConfigDb'
        http:
          $ref: '#/components/schemas/ControllerConfigHttp'
        https:
          $ref: '#/components/schemas/ControllerConfigHttps'
        ldap:
          $ref: '#/components/schemas/ControllerConfigLdap'
    ControllerConfigConfig:
      type: object
      properties:
        dir:
          type: string
    ControllerConfigDebug:
      type: object
      properties:
        console_enabled:
          type: boolean
    ControllerConfigLog:
      type: object
      properties:
        print_stack_trace:
          type: boolean
        directory:
          type: string
        level:
          $ref: '#/components/schemas/LogLevel'
        level_global:
          $ref: '#/components/schemas/LogLevel'
        level_linstor:
          $ref: '#/components/schemas/LogLevel'
        level_linstor_global:
          $ref: '#/components/schemas/LogLevel'
        rest_access_log_path:
          type: string
        rest_access_mode:
          type: string
          enum:
          - APPEND
          - ROTATE_HOURLY
          - ROTATE_DAILY
          - NO_LOG
    ControllerConfigDb:
      type: object
      properties:
        connection_url:
          type: string
        ca_certificate:
          type: string
        client_certificate:
          type: string
        in_memory:
          type: string
        version_check_disabled:
          type: boolean
        etcd:
          $ref: '#/components/schemas/ControllerConfigDbEtcd'
        k8s:
          $ref: '#/components/schemas/ControllerConfigDbK8s'
    ControllerConfigDbEtcd:
      type: object
      properties:
        operations_per_transaction:
          type: integer
          format: int32
        prefix:
          type: string
    ControllerConfigDbK8s:
      type: object
      properties:
        request_retries:
          type: integer
          format: int32
    ControllerConfigHttp:
      type: object
      properties:
        enabled:
          type: boolean
        listen_address:
          type: string
        port:
          type: integer
          format: int32
    ControllerConfigHttps:
      type: object
      properties:
        enabled:
          type: boolean
        listen_address:
          type: string
        port:
          type: integer
          format: int32
    ControllerConfigLdap:
      type: object
      properties:
        enabled:
          type: boolean
        public_access_allowed:
          type: boolean
        uri:
          type: string
        dn:
          type: string
        search_base:
          type: string
        search_filter:
          type: string
    LogLevel:
      type: string
      enum:
      - ERROR
      - WARN
      - INFO
      - DEBUG
      - TRACE
    ControllerVersion:
      type: object
      properties:
        version:
          type: string
        git_hash:
          type: string
        build_time:
          type: string
        rest_api_version:
          type: string
    DatabaseBackupRequest:
      type: object
      properties:
        backup_name:
          type: string
    SatelliteConfig:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/ControllerConfigConfig'
        debug:
          $ref: '#/components/schemas/ControllerConfigDebug'
        log:
          $ref: '#/components/schemas/SatelliteConfigLog'
        stlt_override_node_name:
          type: string
        openflex:
          type: boolean
        remote_spdk:
          type: boolean
        ebs:
          type: boolean
        special_satellite:
          type: boolean
        drbd_keep_res_pattern:
          type: string
        net:
          $ref: '#/components/schemas/SatelliteConfigNet'
    SatelliteConfigLog:
      type: object
      properties:
        print_stack_trace:
          type: boolean
        directory:
          type: string
        level:
          $ref: '#/components/schemas/LogLevel'
        level_linstor:
          $ref: '#/components/schemas/LogLevel'
    SatelliteConfigNet:
      type: object
      properties:
        bind_address:
          type: string
        port:
          type: integer
          format: int32
        com_type:
          type: string
    PropsInfo:
      type: object
      properties:
        info:
          type: string
        prop_type:
          type: string
        value:
          type: string
        dflt:
          type: string
        unit:
          type: string
      example:
        info: sets the c-plan-ahead parameter for a peer device
        prop_type: range
        value: (0 - 300)
        dflt: "20"
        unit: 1/10 seconds
    ErrorReport:
      required:
      - error_time
      type: object
      properties:
        node_name:
          type: string
        error_time:
          type: integer
          format: int64
        filename:
          type: string
          description: |
            Filename of the error report on the server.

            Format is:
            ```ErrorReport-{instanceid}-{nodeid}-{sequencenumber}.log```
        text:
          type: string
          description: Contains the full text of the error report file.
        module:
          type: string
          description: Which module this error occurred.
        version:
          type: string
          description: Linstor version this error report was created.
        peer:
          type: string
          description: Peer client that was involved.
        exception:
          type: string
          description: Exception that occurred
        exception_message:
          type: string
          description: Exception message
        origin_file:
          type: string
          description: Origin file of the exception
        origin_method:
          type: string
          description: Origin method where the exception occurred
        origin_line:
          type: integer
          description: Origin line number
          format: int32
      example:
        node_name: Controller
        error_time: 1536827504594
        filename: ErrorReport-5B9A15B7-00000-000000.log
    ErrorReportDelete:
      type: object
      properties:
        since:
          type: integer
          description: timestamp in millis start date to delete
          format: int64
        to:
          type: integer
          description: timestamp in millis for the end date to delete
          format: int64
        nodes:
          type: array
          description: "on which nodes to delete error-reports, if empty/null all nodes"
          items:
            type: string
        exception:
          type: string
          description: delete all error reports with the given exception
        version:
          type: string
          description: delete all error reports from the given version
        ids:
          type: array
          description: error report ids to delete
          items:
            type: string
    KeyValueStore:
      type: object
      properties:
        name:
          type: string
          description: name of the key value store
        props:
          $ref: '#/components/schemas/Properties'
    KeyValueStoreModify:
      type: object
      properties:
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
    NodeConnection:
      type: object
      properties:
        node_a:
          type: string
          description: source node of the connection
        node_b:
          type: string
          description: target node of the connection
        props:
          $ref: '#/components/schemas/Properties'
    NodeConnectionModify:
      type: object
      properties:
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
    ResourceConnection:
      type: object
      properties:
        node_a:
          type: string
          description: source node of the connection
        node_b:
          type: string
          description: target node of the connection
        props:
          $ref: '#/components/schemas/Properties'
        flags:
          type: array
          items:
            type: string
        port:
          type: integer
    ResourceConnectionModify:
      type: object
      properties:
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
    CreateMultiSnapshotRequest:
      type: object
      properties:
        snapshots:
          type: array
          items:
            $ref: '#/components/schemas/Snapshot'
    CreateMultiSnapshotResponse:
      type: object
      properties:
        messages:
          $ref: '#/components/schemas/ApiCallRcList'
    Snapshot:
      type: object
      properties:
        name:
          type: string
        resource_name:
          type: string
        nodes:
          type: array
          items:
            type: string
        props:
          $ref: '#/components/schemas/Properties'
        flags:
          type: array
          items:
            type: string
        volume_definitions:
          type: array
          items:
            $ref: '#/components/schemas/SnapshotVolumeDefinition'
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
        snapshots:
          type: array
          items:
            $ref: '#/components/schemas/SnapshotNode'
    SnapshotShippingStatus:
      type: object
      properties:
        snapshot:
          $ref: '#/components/schemas/Snapshot'
        from_node_name:
          type: string
        to_node_name:
          type: string
        status:
          type: string
          enum:
          - Running
          - Complete
    SnapshotNode:
      type: object
      properties:
        snapshot_name:
          type: string
          description: Snapshot name this snapshots belongs to
        node_name:
          type: string
          description: Node name where this snapshot was taken
        create_timestamp:
          type: integer
          description: milliseconds since unix epoch in UTC
          format: int64
        flags:
          type: array
          items:
            type: string
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
        snapshot_volumes:
          type: array
          items:
            $ref: '#/components/schemas/SnapshotVolumeNode'
      description: Objects holding one or multiple SnapshotVolumeNode objects for the given node
    SnapshotVolumeNode:
      type: object
      properties:
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
        vlm_nr:
          type: integer
          description: Volume number of the snapshot
          format: int32
        props:
          $ref: '#/components/schemas/Properties'
        state:
          type: string
          description: Optional state for the given snapshot
      description: Actual snapshot data from a node
    SnapshotVolumeDefinition:
      type: object
      properties:
        volume_number:
          type: integer
          format: int32
        size_kib:
          type: integer
          description: Volume size in KiB
          format: int64
    SnapshotRestore:
      required:
      - to_resource
      type: object
      properties:
        to_resource:
          type: string
          description: Resource where to restore the snapshot
          example: rsc2
        nodes:
          type: array
          description: List of nodes where to place the restored snapshot
          items:
            type: string
    SnapshotShipping:
      required:
      - from_node
      - to_node
      type: object
      properties:
        from_node:
          type: string
          description: Node where to ship the snapshot from
        from_nic:
          type: string
          description: NetInterface of the source node
        to_node:
          type: string
          description: Node where to ship the snapshot
        to_nic:
          type: string
          description: NetInterface of the destination node
    BackupList:
      type: object
      properties:
        linstor:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Backup'
          description: A list containing all entries found that are or could be from linstor
        other:
          $ref: '#/components/schemas/BackupOther'
    Backup:
      required:
      - id
      - origin_rsc
      - vlms
      type: object
      properties:
        id:
          type: string
        start_time:
          type: string
        start_timestamp:
          type: integer
          format: int64
        finished_time:
          type: string
        finished_timestamp:
          type: integer
          format: int64
        origin_rsc:
          type: string
        origin_snap:
          type: string
        origin_node:
          type: string
        fail_messages:
          type: string
        vlms:
          type: array
          items:
            $ref: '#/components/schemas/BackupVolumes'
        success:
          type: boolean
        shipping:
          type: boolean
        restorable:
          type: boolean
        s3:
          $ref: '#/components/schemas/BackupS3'
        based_on_id:
          type: string
    BackupVolumes:
      required:
      - vlm_nr
      type: object
      properties:
        vlm_nr:
          type: integer
          format: int64
        finished_time:
          type: string
        finished_timestamp:
          type: integer
          format: int64
        s3:
          $ref: '#/components/schemas/BackupVolumesS3'
    BackupVolumesS3:
      type: object
      properties:
        key:
          type: string
    BackupS3:
      type: object
      properties:
        meta_name:
          type: string
    BackupOther:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
      description: A map containing all other entries found that have no relation to linstor
    BackupRestore:
      required:
      - node_name
      - target_rsc_name
      type: object
      properties:
        src_rsc_name:
          type: string
        src_snap_name:
          type: string
        last_backup:
          type: string
        stor_pool_map:
          type: object
          additionalProperties:
            type: string
        target_rsc_name:
          type: string
        passphrase:
          type: string
        node_name:
          type: string
        download_only:
          type: boolean
          default: false
    BackupCreate:
      required:
      - rsc_name
      type: object
      properties:
        rsc_name:
          type: string
        node_name:
          type: string
        snap_name:
          type: string
        incremental:
          type: boolean
    BackupAbort:
      required:
      - rsc_name
      type: object
      properties:
        rsc_name:
          type: string
        restore:
          type: boolean
        create:
          type: boolean
    BackupShip:
      required:
      - dst_rsc_name
      - src_rsc_name
      type: object
      properties:
        src_node_name:
          type: string
        src_rsc_name:
          type: string
        dst_rsc_name:
          type: string
        dst_node_name:
          type: string
        dst_net_if_name:
          type: string
        dst_stor_pool:
          type: string
        stor_pool_rename:
          type: object
          additionalProperties:
            type: string
        download_only:
          type: boolean
          default: false
        allow_incremental:
          type: boolean
          default: true
    BackupInfo:
      required:
      - alloc_size_kib
      - dl_size_kib
      - full
      - latest
      - rsc
      - storpools
      type: object
      properties:
        rsc:
          type: string
        full:
          type: string
        snap:
          type: string
        latest:
          type: string
        count:
          type: integer
          format: int32
        dl_size_kib:
          type: integer
          format: int64
        alloc_size_kib:
          type: integer
          format: int64
        storpools:
          type: array
          items:
            $ref: '#/components/schemas/BackupInfoStorPool'
    BackupInfoRequest:
      type: object
      properties:
        src_rsc_name:
          type: string
        src_snap_name:
          type: string
        last_backup:
          type: string
        stor_pool_map:
          type: object
          additionalProperties:
            type: string
        node_name:
          type: string
    BackupInfoStorPool:
      required:
      - name
      - vlms
      type: object
      properties:
        name:
          type: string
        provider_kind:
          $ref: '#/components/schemas/ProviderKind'
        target_name:
          type: string
        remaining_space_kib:
          type: integer
          format: int64
        vlms:
          type: array
          items:
            $ref: '#/components/schemas/BackupInfoVolume'
    BackupInfoVolume:
      required:
      - layer_type
      type: object
      properties:
        name:
          type: string
        layer_type:
          $ref: '#/components/schemas/LayerType'
        dl_size_kib:
          type: integer
          format: int64
        alloc_size_kib:
          type: integer
          format: int64
        usable_size_kib:
          type: integer
          format: int64
    BackupSchedule:
      type: object
      properties:
        rsc_name:
          type: string
        grp_name:
          type: string
        node_name:
          type: string
    ScheduleDetailsList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleDetails'
    ScheduleDetails:
      required:
      - remote_name
      - schedule_name
      type: object
      properties:
        remote_name:
          type: string
        schedule_name:
          type: string
        ctrl:
          type: boolean
        rsc_grp:
          type: boolean
        rsc_dfn:
          type: boolean
    ScheduledRscsList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ScheduledRscs'
    ScheduledRscs:
      required:
      - remote_name
      - rsc_name
      - schedule_name
      type: object
      properties:
        rsc_name:
          type: string
        remote_name:
          type: string
        schedule_name:
          type: string
        reason:
          type: string
          description: |
            The reason for why this rscDfn has no active schedules.
            If this is set, ignore all long and boolean parameters.
        last_snap_time:
          type: integer
          description: |
            The time at which the last scheduled shipping was shipped.
            If negative, no scheduled shipping has happened yet.
          format: int64
        last_snap_inc:
          type: boolean
          description: |
            Whether the last shipping was incremental or not.
            Ignore this value if last_snap_time is negative.
        next_exec_time:
          type: integer
          description: |
            The time at which the next scheduled shipping will happen.
            If negative, the shipping is currently running.
          format: int64
        next_exec_inc:
          type: boolean
          description: |
            Whether the next scheduled shipping will be incremental or not.
            Ignore if next_exec_time is negative
        next_planned_full:
          type: integer
          description: |
            The time at which the next scheduled full backup should happen.
            If negative, the time could not be computed
          format: int64
        next_planned_inc:
          type: integer
          description: |
            The time at which the next scheduled incremental backup should happen.
            If negative, either there is no cron for incremental backups or
            the time could not be computed
          format: int64
    PassPhraseCreate:
      type: object
      properties:
        new_passphrase:
          type: string
        old_passphrase:
          type: string
    PassPhraseEnter:
      type: string
    StoragePoolDefinition:
      type: object
      properties:
        storage_pool_name:
          type: string
        props:
          $ref: '#/components/schemas/Properties'
    StoragePoolDefinitionModify:
      type: object
      properties:
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
    DrbdProxyEnable:
      type: object
      properties:
        port:
          type: integer
          description: Proxy port to use (optional)
          format: int32
    DrbdProxyModify:
      type: object
      properties:
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        compression_type:
          type: string
          description: |
            Compression type used by the proxy.
          enum:
          - none
          - zlib
          - lzma
          - lz4
        compression_props:
          $ref: '#/components/schemas/Properties'
    PhysicalStorageNode:
      type: object
      properties:
        size:
          type: integer
          format: int64
        rotational:
          type: boolean
        device:
          type: string
        model:
          type: string
        serial:
          type: string
        wwn:
          type: string
    PhysicalStorage:
      type: object
      properties:
        size:
          type: integer
          format: int64
        rotational:
          type: boolean
        nodes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/PhysicalStorageDevice'
    PhysicalStorageDevice:
      type: object
      properties:
        device:
          type: string
        model:
          type: string
        serial:
          type: string
        wwn:
          type: string
    PhysicalStorageStoragePoolCreate:
      type: object
      properties:
        name:
          type: string
          description: Name of the linstor storage pool
        props:
          $ref: '#/components/schemas/Properties'
        shared_space:
          type: string
          description: Name of the shared space
        external_locking:
          type: boolean
          description: "true if a shared storage pool uses linstor-external locking, like cLVM"
          default: false
      description: This structure is used for create physical-storage
    PhysicalStorageCreate:
      required:
      - device_paths
      - provider_kind
      type: object
      properties:
        provider_kind:
          $ref: '#/components/schemas/ProviderKind'
        device_paths:
          type: array
          items:
            type: string
        raid_level:
          type: string
          description: |
            RAID level to use for pool.
          default: JBOD
          enum:
          - JBOD
        pool_name:
          type: string
        vdo_enable:
          type: boolean
          default: false
        vdo_slab_size_kib:
          type: integer
          format: int64
          default: 0
        vdo_logical_size_kib:
          type: integer
          format: int64
          default: 0
        with_storage_pool:
          $ref: '#/components/schemas/PhysicalStorageStoragePoolCreate'
        sed:
          type: boolean
          description: initialize SED with a random password
          default: false
      description: If `with_storage_pool` is set a linstor storage pool will also be created using this device pool
    EventMayPromoteChange:
      type: object
      properties:
        resource_name:
          type: string
        node_name:
          type: string
        may_promote:
          type: boolean
      description: may-promote-change
    EventNode:
      type: object
      properties:
        node:
          $ref: '#/components/schemas/Node'
    EventNodeModified:
      type: object
      properties:
        old_node:
          $ref: '#/components/schemas/Node'
        new_node:
          $ref: '#/components/schemas/Node'
    ExosDefaults:
      type: object
      properties:
        username:
          type: string
        username_env:
          type: string
        password:
          type: string
        password_env:
          type: string
      description: Default settings for EXOS enclosures
    ExosDefaultsModify:
      allOf:
      - $ref: '#/components/schemas/ExosDefaults'
      - type: object
        properties:
          unset_keys:
            type: array
            description: |
              A list of keys to unset. The keys have to exist in ExosDefaults
            items:
              type: string
    ExosEnclosureHealth:
      type: object
      properties:
        name:
          type: string
        ctrl_a_ip:
          type: string
        ctrl_b_ip:
          type: string
        health:
          type: string
        health_reason:
          type: string
      description: "EXOS enclosure name, controller IPs and health status"
    ExosEnclosure:
      type: object
      properties:
        name:
          type: string
        ctrl_a_ip:
          type: string
        ctrl_b_ip:
          type: string
        username:
          type: string
        username_env:
          type: string
        password:
          type: string
        password_env:
          type: string
      description: EXOS enclosure
    ExosEnclosureEvent:
      type: object
      properties:
        severity:
          type: string
        event_id:
          type: string
        controller:
          type: string
        time_stamp:
          type: string
        time_stamp_numeric:
          type: integer
          format: int64
        message:
          type: string
        additional_information:
          type: string
        recommended_action:
          type: string
      description: EXOS event
    ExosConnectionMap:
      type: object
      properties:
        node_name:
          type: string
        enclosure_name:
          type: string
        connections:
          type: array
          items:
            type: string
    ExternalFile:
      type: object
      properties:
        path:
          type: string
          description: The path where the external file should be deployed on the node
          example: /etc/some.conf
        content:
          type: string
          description: "The contents of the file, in base64 encoding"
          example: SGVsbG8sIFdvcmxkIQo=
      description: External file which can be configured to be deployed by Linstor
    ToggleDiskDiskful:
      type: object
      properties:
        layer_list:
          type: array
          items:
            $ref: '#/components/schemas/LayerType'
      description: ToggleDisk optional payload data
    ExternalName:
      type: string
      description: |
        External name can be used to have native resource names.
        If you need to store a non Linstor compatible resource name use this field
        and Linstor will generate a compatible name.
    ResourceDefinitionCloneRequest:
      type: object
      properties:
        name:
          type: string
        external_name:
          $ref: '#/components/schemas/ExternalName'
        use_zfs_clone:
          type: boolean
          description: |
            If true Zfs will not use send/recv to clone, but instead
            use a parent snapshot with clone, which cannot be deleted
      description: Clone request object
    ResourceDefinitionCloneStarted:
      required:
      - clone_name
      - location
      - source_name
      type: object
      properties:
        location:
          type: string
          description: Path for clone status
          example: /v1/resource-definitions/testres/clone/clonedresource
        source_name:
          type: string
          description: name of the source resource
        clone_name:
          type: string
          description: name of the clone resource
        messages:
          $ref: '#/components/schemas/ApiCallRcList'
      description: Clone request started object
    ResourceDefinitionCloneStatus:
      required:
      - status
      type: object
      properties:
        status:
          type: string
          description: |
            CLONING -> indicates the resource is currently copying data
            FAILED -> error occured while cloning, resource not usable
            COMPLETE -> resource is ready to use
          enum:
          - COMPLETE
          - CLONING
          - FAILED
      description: Clone status object
    ResourceDefinitionSyncStatus:
      required:
      - synced_on_all
      type: object
      properties:
        synced_on_all:
          type: boolean
          default: false
      description: Clone status object
    RemoteList:
      type: object
      properties:
        s3_remotes:
          type: array
          items:
            $ref: '#/components/schemas/S3Remote'
        linstor_remotes:
          type: array
          items:
            $ref: '#/components/schemas/LinstorRemote'
        ebs_remotes:
          type: array
          items:
            $ref: '#/components/schemas/EbsRemote'
    S3Remote:
      type: object
      properties:
        remote_name:
          type: string
        endpoint:
          type: string
        bucket:
          type: string
        region:
          type: string
        access_key:
          type: string
        secret_key:
          type: string
        use_path_style:
          type: boolean
          default: false
    LinstorRemote:
      type: object
      properties:
        remote_name:
          type: string
        url:
          type: string
        passphrase:
          type: string
        cluster_id:
          type: string
    EbsRemote:
      type: object
      properties:
        remote_name:
          type: string
        endpoint:
          type: string
        region:
          type: string
        availability_zone:
          type: string
        access_key:
          type: string
        secret_key:
          type: string
    ScheduleList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Schedule'
    Schedule:
      required:
      - full_cron
      - schedule_name
      type: object
      properties:
        schedule_name:
          type: string
        full_cron:
          type: string
        inc_cron:
          type: string
        keep_local:
          type: integer
          description: the number of snapshots that are basis for a full backup to keep locally
          format: int32
        keep_remote:
          type: integer
          description: the number of full backups to keep at the remote
          format: int32
        on_failure:
          type: string
          default: SKIP
          enum:
          - SKIP
          - RETRY
        max_retries:
          type: integer
          description: how many times a failed backup should be retried if on_failure == RETRY
          format: int32
    ScheduleModify:
      type: object
      properties:
        full_cron:
          type: string
        inc_cron:
          type: string
        keep_local:
          type: integer
          description: the number of snapshots that are basis for a full backup to keep locally
          format: int32
        keep_remote:
          type: integer
          description: the number of full backups to keep at the remote
          format: int32
        on_failure:
          type: string
          enum:
          - SKIP
          - RETRY
        max_retries:
          type: integer
          description: how many times a failed backup should be retried if on_failure == RETRY
          format: int32
    NodeStats:
      required:
      - count
      type: object
      properties:
        count:
          type: integer
          format: int64
    StoragePoolStats:
      required:
      - count
      type: object
      properties:
        count:
          type: integer
          format: int64
    ResourceGroupStats:
      required:
      - count
      type: object
      properties:
        count:
          type: integer
          format: int64
    ResourceDefinitionStats:
      required:
      - count
      type: object
      properties:
        count:
          type: integer
          format: int64
    ResourceStats:
      required:
      - count
      type: object
      properties:
        count:
          type: integer
          format: int64
    ErrorReportStats:
      required:
      - count
      type: object
      properties:
        count:
          type: integer
          format: int64
    inline_response_200:
      oneOf:
      - type: object
        properties:
          event:
            type: string
            enum:
            - may-promote-change
          data:
            $ref: '#/components/schemas/EventMayPromoteChange'
        description: may-promote-change
    inline_response_200_1:
      oneOf:
      - type: object
        properties:
          event:
            type: string
            enum:
            - node-create
          data:
            $ref: '#/components/schemas/EventNode'
        description: node-create
      - type: object
        properties:
          event:
            type: string
            enum:
            - node-delete
          data:
            $ref: '#/components/schemas/EventNode'
        description: node-delete
      - type: object
        properties:
          event:
            type: string
            enum:
            - node-evacuate
          data:
            $ref: '#/components/schemas/EventNode'
        description: node-evacuate
      - type: object
        properties:
          event:
            type: string
            enum:
            - node-evicted
          data:
            $ref: '#/components/schemas/EventNode'
        description: node-evicted
      - type: object
        properties:
          event:
            type: string
            enum:
            - node-restored
          data:
            $ref: '#/components/schemas/EventNode'
        description: node-restored
      - type: object
        properties:
          event:
            type: string
            enum:
            - node-modified
          data:
            $ref: '#/components/schemas/EventNodeModified'
        description: node-modified
  responses:
    InvalidInput:
      description: "invalid input, or request failed"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiCallRcList'
    ObjectNotFound:
      description: object not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiCallRcList'
    OperationFailed:
      description: operation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiCallRc'
  parameters:
    Resource:
      name: resource
      in: path
      description: resource to use
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ResourceClone:
      name: resourceClone
      in: path
      description: resource clone name
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ResourceGroupName:
      name: resource_group
      in: path
      description: resource group to use
      required: true
      style: simple
      explode: false
      schema:
        type: string
    Node:
      name: node
      in: path
      description: node to use
      required: true
      style: simple
      explode: false
      schema:
        type: string
    Nodes:
      name: nodes
      in: query
      description: "Filter only for the specified nodes, if not specified, no filtering."
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    Resources:
      name: resources
      in: query
      description: "Filter only for the specified resources, if not specified, no filtering."
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    NetInterface:
      name: netinterface
      in: path
      description: netinterface name to use
      required: true
      style: simple
      explode: false
      schema:
        type: string
    StoragePool:
      name: storagepool
      in: path
      description: Storage pool to use
      required: true
      style: simple
      explode: false
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: number of records to skip for pagination
      required: false
      style: form
      explode: true
      schema:
        minimum: 0
        type: integer
        format: int32
    Limit:
      name: limit
      in: query
      description: maximum number of records to return
      required: false
      style: form
      explode: true
      schema:
        maximum: 50
        minimum: 0
        type: integer
        format: int32
    Cached:
      name: cached
      in: query
      description: query data from cache if available
      required: false
      style: form
      explode: true
      schema:
        type: boolean
    Props:
      name: props
      in: query
      description: "filter by given properties, full property path"
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    NodeA:
      name: node_a
      in: path
      description: source node of the connection
      required: true
      style: simple
      explode: false
      schema:
        type: string
    NodeB:
      name: node_b
      in: path
      description: target node of the connection
      required: true
      style: simple
      explode: false
      schema:
        type: string
    VolumeNumber:
      name: volume_number
      in: path
      description: Volume number of the definition
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int32
    Since:
      name: since
      in: query
      description: Unix epoch milliseconds
      required: false
      style: form
      explode: true
      schema:
        type: integer
        format: int64
    ExternalFileName:
      name: extFileName
      in: path
      description: Name of an external file. Must be an absolute path in URL-encoding
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: '%2Fetc%2Fsome.conf'
